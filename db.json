{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":1,"renderable":0},{"_id":"themes/next/source/404.html","path":"404.html","modified":1,"renderable":1},{"_id":"themes/next/source/V1/index.html","path":"V1/index.html","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon.ico","path":"images/favicon.ico","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/uploads/avatar.png","path":"uploads/avatar.png","modified":1,"renderable":1},{"_id":"themes/next/source/V1/images/backTop.png","path":"V1/images/backTop.png","modified":1,"renderable":1},{"_id":"themes/next/source/V1/js/index.js","path":"V1/js/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/V1/css/index.css","path":"V1/css/index.css","modified":1,"renderable":1},{"_id":"themes/next/source/V1/css/reset.css","path":"V1/css/reset.css","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/V1/js/data.js","path":"V1/js/data.js","modified":1,"renderable":1},{"_id":"themes/next/source/V1/js/jquery.js","path":"V1/js/jquery.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"5735cff25598ab0ec6aaec3d3bbeb39cc7ae807c","modified":1487296451772},{"_id":"source/baidu_verify_AZ3Xok9oZV.html","hash":"656fa009a8cc280ac2af0e60e2b54de88d4c77a2","modified":1487344484695},{"_id":"source/googled4d8acf007d35fa4.html","hash":"9303b60e78bd5ab7d6956f9c03a2ebe849edd2dd","modified":1487344498066},{"_id":"source/robots.txt","hash":"f0f2f0a85b62b68df6e4aeb7982e97c8bb5a18f0","modified":1487552855649},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1487210727311},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1487210727312},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1487210727317},{"_id":"themes/next/.javascript_ignore","hash":"74b54cf920cbbf4038a68e54b7138af8b8f45588","modified":1487210727317},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1487210727318},{"_id":"themes/next/README.en.md","hash":"953873fe2ee79bfc567b16dcdf8f91c1410444f8","modified":1487210727319},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1487210727320},{"_id":"themes/next/.gitignore","hash":"de5b9b9e5b313b4a86e805b02f334d35c87bfe56","modified":1487210727316},{"_id":"themes/next/_config.yml","hash":"758e1fc9b05f43b208f6535370a7773f65336451","modified":1509520527255},{"_id":"themes/next/bower.json","hash":"bd70cf5988bbfc8cbcf13adae659151a55466524","modified":1487210727321},{"_id":"themes/next/gulpfile.coffee","hash":"e549561461642051d195550ec49d793e44ee22a0","modified":1487210727322},{"_id":"themes/next/package.json","hash":"48e2352f8e41f2b6bbf55254d10f3192ee206d5a","modified":1487210727377},{"_id":"source/_posts/2017-02-17-travis部署Hexo之填坑日记.md","hash":"213de01dd002e6566f83d1ce0975fa83d83c697b","modified":1487487520928},{"_id":"source/_posts/2017-02-21-js之promise.md","hash":"6a55a728013626cd27ee7b157cdff4b1b9355a92","modified":1487728929421},{"_id":"source/_posts/2017-06-08-Let-s-Encrypt证书使用.md","hash":"d1ca3f9410e0a969facf9fca5dc6da7358091001","modified":1509521134455},{"_id":"source/_posts/2017-11-01-新的开始.md","hash":"58ea7f8ed1cf98afda26ac98fc168b1ff5abe707","modified":1509515242868},{"_id":"source/_posts/2017-06-16-异常随记.md","hash":"635f310c317411cf0591941f956fc13cfebf8d6f","modified":1509515242870},{"_id":"source/_posts/spring ioc 控制反转.md","hash":"461c9c2b3668cd660202ba2633a51dc2d938a567","modified":1489306965877},{"_id":"source/categories/index.md","hash":"64c6aaa5b6f6c65acd1330dc5f8dc22b885ddbea","modified":1487230207278},{"_id":"source/tags/index.md","hash":"36cf368a60254983ca5741e6921ead6a4ba844b4","modified":1487230205439},{"_id":"themes/next/languages/de.yml","hash":"db6a9d669f4b6282cda6c0a2d4e03d3e308a4846","modified":1487210727324},{"_id":"themes/next/languages/default.yml","hash":"0a3672575cc99a77e413a45cd635ca2e096a176e","modified":1487210727324},{"_id":"themes/next/languages/en.yml","hash":"0a3672575cc99a77e413a45cd635ca2e096a176e","modified":1487210727325},{"_id":"themes/next/languages/fr-FR.yml","hash":"91cf55b9d75879e72c8008d2659fe2ea993a4cca","modified":1487210727326},{"_id":"themes/next/languages/id.yml","hash":"d8b9dc017da0be7f71fda1cacd8064cbc38963b9","modified":1487210727327},{"_id":"themes/next/languages/ja.yml","hash":"bc89436a2a015ef72f43f265e56e37d94e73c0cd","modified":1487210727328},{"_id":"themes/next/languages/ko.yml","hash":"c59676f2af80c3c594c34c4a0fcbf65fd8864ff3","modified":1487210727328},{"_id":"themes/next/languages/pt-BR.yml","hash":"4b91f96b07e05705b28964df7460466c9b522e2c","modified":1487210727329},{"_id":"themes/next/languages/pt.yml","hash":"f364905121a816c9797acce07c0a4f248965b29a","modified":1487210727331},{"_id":"themes/next/languages/ru.yml","hash":"40f4260866eab5c28ba715c3be495d7e81c73df7","modified":1487210727331},{"_id":"themes/next/languages/zh-Hans.yml","hash":"fca21fd2d5075a4f42ec86a0c45e9f83ab3bafd2","modified":1487515946847},{"_id":"themes/next/languages/zh-hk.yml","hash":"a59f3f3114f5eb4d170a76da4359307e8f5159a7","modified":1487210727333},{"_id":"themes/next/languages/zh-tw.yml","hash":"18da1324d2212faca9a6e5e6ce98b419c86d4b0c","modified":1487210727334},{"_id":"themes/next/layout/_layout.swig","hash":"2262ac16ec86165b0bd689c77edeac7f6342c83f","modified":1509517573393},{"_id":"themes/next/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1487210727373},{"_id":"themes/next/layout/index.swig","hash":"f21ef57fdf27159139ac924ac521eed4f25c8342","modified":1487388255918},{"_id":"themes/next/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1487210727373},{"_id":"themes/next/layout/page.swig","hash":"2a13804aa186f6062738d136e430870c53789bf4","modified":1487210727375},{"_id":"themes/next/layout/post.swig","hash":"b8334c479840b7724638eec71971cbd8512ae58d","modified":1487210727375},{"_id":"themes/next/layout/schedule.swig","hash":"595013860078799d455af4965b3a7c5c4fd3923c","modified":1487210727376},{"_id":"themes/next/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1487210727376},{"_id":"themes/next/scripts/merge-configs.js","hash":"f8cde6953939802f92da5b7a2458c6c539e9be69","modified":1487210727377},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1487210727527},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1487210727528},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1487210727528},{"_id":"themes/next/source/404.html","hash":"b8bfc9fb51c02c88d43c97b3c7dffccf07478964","modified":1487493861617},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487210727437},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1487210727338},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1487210727338},{"_id":"themes/next/layout/_macro/my-copyright.swig","hash":"a5305452bd1931374c036d74e0de8b552de024e8","modified":1509518545916},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"6d40652784585d263c37b8a3723e43e04b926ca7","modified":1487210727341},{"_id":"themes/next/layout/_macro/post.swig","hash":"104e207d9ee444dda1dfb6194e8d5d418f4af008","modified":1509521520358},{"_id":"themes/next/layout/_macro/passage-end-tag.swig","hash":"396feef13c2f0a2241d70b28a304e6583d3d32f8","modified":1509517799676},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1487210727343},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"a42851e17d8961e5cae8b588d95a4a5456964972","modified":1487210727344},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"c5cc0070ca7c9a8dbd4b09e0398db536c3cdbe8a","modified":1487210727344},{"_id":"themes/next/layout/_partials/comments.swig","hash":"cd74d7d0aa2097de0e73e8e53cca5d022cec8c43","modified":1487210727345},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1487210727346},{"_id":"themes/next/layout/_partials/footer.swig","hash":"5e0ec2530369cf8ebac513d76fa1f10b1bcf54fb","modified":1509520352218},{"_id":"themes/next/layout/_partials/head.swig","hash":"da8cd9a0dcb9ad54d6151999bd0dde8a475273cd","modified":1509518467267},{"_id":"themes/next/layout/_partials/header.swig","hash":"8985089c950d6df0efab9cd549a6b9ee50708ee2","modified":1487210727349},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"dfbb6e9692333166aa78231ad12b2a40c153cbcb","modified":1487210727349},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1487210727350},{"_id":"themes/next/layout/_partials/search.swig","hash":"952b7b8d9ce2c81d4002a9dc2331f1e710f99616","modified":1487210727350},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1487210727355},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1487210727355},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1487210727356},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"e9beddda9758d8739c41fc8c67b2e72fc29c1244","modified":1487210727372},{"_id":"themes/next/scripts/tags/button.js","hash":"aaf71be6b483fca7a65cd6296c2cf1c2271c26a6","modified":1487210727378},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1487210727379},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1487210727378},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1487210727380},{"_id":"themes/next/scripts/tags/note.js","hash":"7dc14db08f2c74f8f1952534b424f220f5c000c6","modified":1487210727380},{"_id":"themes/next/source/V1/index.html","hash":"311e122819d0b26fad20881b6202d9922f33550d","modified":1487552335758},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1487210727436},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1487210727438},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1487210727439},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1487210727440},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1487210727440},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1487210727441},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1487210727442},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1487210727442},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1487210727443},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1487210727443},{"_id":"themes/next/source/images/favicon.ico","hash":"fe0c8bfc7c6ddc92f1cc27a6dfa3afaea7f48f7a","modified":1487489631679},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1487210727444},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1487210727460},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1487210727461},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1487210727462},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1487210727462},{"_id":"themes/next/source/uploads/avatar.png","hash":"6e9fc74f352d248667c2b30c0558a83dd5e64501","modified":1487211409531},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487210727357},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487210727357},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487210727418},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487210727418},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487210727420},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487210727433},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1487210727436},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1487210727336},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"bb2c3a926bb7f8fea54d424882b25d93dfde7ae6","modified":1487210727337},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1487210727348},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1487210727348},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"efa7efcbb575381b508f9aa0e0c53140eef72a7b","modified":1487210727351},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1487210727351},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1487210727352},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1487210727353},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1487210727352},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1487210727353},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1487210727354},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1487210727357},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1487210727358},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"8b34af99cb673853fd948c02d07eb11eb3fb41b4","modified":1487210727359},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"03d259066399c1eb4a436ea4e5e7a4802426d72c","modified":1487210727365},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"e495aed8fb36bf8015ddbd64366270a7debad2b0","modified":1487210727370},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"f592adff22628b271ec9657b080cf6b9cc200615","modified":1487210727370},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1487210727371},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1487210727371},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1487210727372},{"_id":"themes/next/source/V1/images/backTop.png","hash":"d1786c51ffeb37663a57973ac5f592149a31f828","modified":1475623604000},{"_id":"themes/next/source/V1/js/index.js","hash":"83328bb93c04e68466e16b8a1915b95f6d802c0f","modified":1475623604000},{"_id":"themes/next/source/V1/css/index.css","hash":"4398d9c603a67c7bd80f3034b2ff67ed07bb2090","modified":1475623604000},{"_id":"themes/next/source/V1/css/reset.css","hash":"559d610d1aa00ba07ec47db1b60d91612829688c","modified":1475623604000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"fd3d152b61d7dfbaf0fd1aca342c3c5144c72933","modified":1509518191605},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1487210727419},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1487210727419},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1487210727433},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c666e352c3b8e4ad0a16cc757b08f44ef9172182","modified":1487210727434},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d87c580203b035b5b4084dac71a73fb161fd8d22","modified":1509519253232},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1487210727464},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"84bdc8a4fe127849a5c99bdefe1d0b65ee1a4a0a","modified":1487210727464},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"4a0da1bed19e65bd7db42421b447061bc1618710","modified":1487210727465},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1487210727465},{"_id":"themes/next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1487210727466},{"_id":"themes/next/source/js/src/post-details.js","hash":"458af3b1bd7783c1950808e66cedfa9fb68bf21f","modified":1487210727466},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1487210727467},{"_id":"themes/next/source/js/src/utils.js","hash":"e34f83848883732ddd7a34a3e3ed2a293f0f76a7","modified":1487210727468},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1487210727469},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1487210727474},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1487210727475},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1487210727475},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1487210727491},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1487210727491},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1487210727492},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1487210727493},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"8868275e8b6340c87a81c69a54ed138d11fb3c3e","modified":1487210727495},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1487210727496},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1487210727496},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1487210727497},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1487210727497},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1487210727512},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1487210727513},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1487210727514},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1487210727514},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1487210727515},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1487210727515},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1487210727517},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1487210727520},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1487210727520},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1487210727524},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1487210727525},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1487210727525},{"_id":"themes/next/source/V1/js/data.js","hash":"186b624c666387e0b4fa6ebf8c8eddd152b2ae1d","modified":1475623604000},{"_id":"themes/next/source/V1/js/jquery.js","hash":"66954fe621b0fee76d72d6c201d2bde2c0167ccf","modified":1475623604000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1487210727513},{"_id":"themes/next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1487210727359},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1487210727360},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"24105e62d7f26946907fa14cd02589f899bf8122","modified":1487210727360},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1487210727361},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1487210727362},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"1b6af02fd0ba3f729675cd95429a0cea4aebf358","modified":1487210727362},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1487210727363},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-mta.swig","hash":"e9a0590dafde1046356620dd2b81e83b6b3b0936","modified":1487210727364},{"_id":"themes/next/layout/_scripts/third-party/analytics/vkontakte-api.swig","hash":"0506bcaf3dff28088bac6fdb8c8dbb4dc8915dfa","modified":1487210727364},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"e4a13e8cd19762ef3aea0e59dfae8b3c1f251f11","modified":1487210727367},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1487210727367},{"_id":"themes/next/layout/_scripts/third-party/comments/gentie.swig","hash":"0f38f053841ef77cdce56a84cfbb4dd4c3329486","modified":1487210727368},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1487210727368},{"_id":"themes/next/layout/_scripts/third-party/comments/livere.swig","hash":"5830a52c2a555d3a1f19b67d7bf3d072376cdea9","modified":1487210727369},{"_id":"themes/next/layout/_scripts/third-party/comments/youyan.swig","hash":"de95ec8920d1660680078451008f8bd69f14d082","modified":1487210727369},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ad69cbf94eedacc27e756cdb9c7073416db697d0","modified":1487210727382},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1487210727382},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1487210727383},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"b7d5cc29586ac796a50d90974ad99d24a5982137","modified":1487210727383},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1487210727392},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1487210727404},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1487210727414},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5a35aa0381b0e1d465b952a997194441020446ea","modified":1487210727415},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"b6ee5fefa6046086a76ddbcfafc82482816fa3e0","modified":1487210727415},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1487210727416},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1487210727416},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1487210727417},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1487210727421},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1487210727422},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1487210727422},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1487210727423},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"ce272226a1570f5f7c70243b751a5b0fe1671a88","modified":1487210727423},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1487210727424},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1487210727425},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1487210727427},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1487210727427},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1487210727428},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1487210727428},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1487210727429},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"34acb45007229b299951ce35d8eef642ea16fbe9","modified":1487210727430},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"221d3dbc04ff6c211ba9382397c4977e9f493153","modified":1487210727431},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"173f3aa31c41782591b7abeadd4f88f68d59b042","modified":1487210727431},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1487210727432},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"1be4ef3f97f329e2531bfd2dfdc40c0e46df35c8","modified":1487210727432},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1487210727433},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"c2390263a298a2b78c5f941e6827c13f02e1ee85","modified":1487210727467},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1487210727477},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1487210727478},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1487210727479},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1487210727480},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1487210727481},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1487210727482},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1487210727488},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1487210727489},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1487210727490},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1487210727494},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1487210727494},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"a02674d823c7b577d38c3cdb91953993b6e4b3a0","modified":1487210727498},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1487210727499},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"3c1d63dd1176c77f9f4cdb1616fbb08c31b9822f","modified":1487210727500},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1487210727518},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1487210727519},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1487210727502},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1487210727503},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1487210727510},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1487210727511},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1487210727522},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1487210727384},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1487210727385},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1487210727385},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"852fd77500bda2c1a6651a14aa48d7d6222adc9d","modified":1487210727385},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1487210727386},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1487210727387},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1487210727386},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"3705cad785f252bed32e720f13b9a758ba39ef1b","modified":1487238622605},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1487210727389},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1487210727389},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1487210727390},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1487210727390},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1487210727391},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1487210727391},{"_id":"themes/next/source/css/_common/components/post/my-post-copyright.styl","hash":"e954bf95842945b196bbb0de7b8098950a780129","modified":1509518606131},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"4783f85872bc7e218c1522a5c1c68cd27a5922db","modified":1487210727393},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a45f5fce643eec4e1b927165229d560364bcace1","modified":1487210727394},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1487210727394},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"4866fb9453d7d4c83a1c4e55d74e4afed336eb8b","modified":1487210727395},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1487210727395},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"61ec8a8481e8b76f2943235256c6d4f89c751c1c","modified":1487210727396},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1487210727396},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1487210727397},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1487210727398},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1487210727398},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"7387eaa5efd5617eaa99cd05083bca68db716de1","modified":1509518730555},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1487210727400},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"184a9f9ee2d1fd3c6ea5df86c2fdab9f928f6ef7","modified":1487238703046},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"821991c0890966a512b43e8b1cf9537e738a09a0","modified":1487210727401},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1487210727401},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1487210727401},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"394888efec32749b353292a59ec7f1b609d6325e","modified":1487210727402},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"06b9a99d63b4d57fdbf70b88ab7036fbc47e3f52","modified":1487210727402},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1487210727403},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1487210727403},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1487210727404},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1487210727406},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1487210727405},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"8420b4be386469337243336aee694297875bd439","modified":1487210727406},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"c8a05ce90784db9744c22fab22019eb637df1f2f","modified":1487210727407},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"3b1aabbab57b0b1fafa311feb1212f59e78e7928","modified":1487210727408},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1487210727408},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"7f7e9df15148608a9c29326dd880d8e8e8efc0ec","modified":1487210727410},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1487210727411},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"cd526e814f9323a79fe835085d64867d34b3715d","modified":1487210727411},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1487210727412},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"eb4ede7d7446d8a2f2ddeef3b17f497a6ad30756","modified":1487210727413},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"dc944a01dd59f5ed2d44bb22fdb21fc3f455948f","modified":1487210727413},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1487210727425},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1487210727426},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"cf900c5026ab36f31118317d0ae32a213e3ec2a9","modified":1487210727429},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1487210727484},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1487210727485},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1487210727485},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1487210727486},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1487210727487},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1487210727486},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ed855f7bdd986f2b781cf5e56183c56ce960fe30","modified":1509521260447},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1487210727509},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1487210727473},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"964e8dac2cee79c4b49b5bc300675773f6518812","modified":1487210727506},{"_id":"public/googled4d8acf007d35fa4.html","hash":"0c23713c81be829c73defe9cdcff7de55b2b9dbe","modified":1509521557326},{"_id":"public/baidu_verify_AZ3Xok9oZV.html","hash":"b60c7f4768bf55ee7485febb76a08ab94896a5da","modified":1509521557337},{"_id":"public/baidusitemap.xml","hash":"bab12967c21b568618f8b88a9793077efa003ebe","modified":1509521557338},{"_id":"public/atom.xml","hash":"1cc005b462eca25d4af5711d9640f43b9f98101e","modified":1509521557338},{"_id":"public/search.xml","hash":"67ba4d7cea079a15708add52cbcf1a90672d9893","modified":1509521557338},{"_id":"public/sitemap.xml","hash":"9cda60f6d34833326b4e0c0366a2be13bbac133e","modified":1509521557339},{"_id":"public/categories/index.html","hash":"8059c6e626d403aee9258d0b98db0a4a1da4bf91","modified":1509521557427},{"_id":"public/tags/index.html","hash":"6bae70adc25a421224b49d4abb407e1744126524","modified":1509521557428},{"_id":"public/archives/b585e161.html","hash":"9774f32fbfc15a53c65a9caa453e5f107757a34d","modified":1509521557428},{"_id":"public/archives/3979fffb.html","hash":"c02a5ba60ac1a41bddd33605039aaf55c494d95e","modified":1509521557428},{"_id":"public/archives/ec1907ff.html","hash":"ef1c6ac543eb2803857d491d7e98c0b0c8c00ba9","modified":1509521557428},{"_id":"public/archives/50de3585.html","hash":"77dc1a0052e372a4d494fe204adfa50db958e4f3","modified":1509521557428},{"_id":"public/archives/fddbb00f.html","hash":"9c538b35870ef1870e6e42d6c2fe7ce2e8a76c8f","modified":1509521557428},{"_id":"public/archives/a8653e18.html","hash":"909f5f84f1d70c0f483712019d4c2fc01e9a3bce","modified":1509521557429},{"_id":"public/archives/index.html","hash":"338f593e43b777f11a50744a1285c1102dbf6920","modified":1509521557429},{"_id":"public/archives/page/2/index.html","hash":"a25b0ebc2220eff7168fa710f390093eee8bc2c7","modified":1509521557429},{"_id":"public/archives/2017/index.html","hash":"33378ba9b583455617d43d99ef96e353bc6063e9","modified":1509521557429},{"_id":"public/archives/2017/page/2/index.html","hash":"b923b3a6e215e881985e320fff7564ff5a5a5cb0","modified":1509521557429},{"_id":"public/archives/2017/02/index.html","hash":"dd49731595fa242c9d205a922df64a1ab129f42f","modified":1509521557429},{"_id":"public/archives/2017/03/index.html","hash":"3839b0eb356adb7831eeb9cf0bb316d7750049e7","modified":1509521557429},{"_id":"public/archives/2017/06/index.html","hash":"c85963efd11cb0b00adecf60e1281d9b730d830a","modified":1509521557429},{"_id":"public/archives/2017/11/index.html","hash":"32dd238a96cb2c5e5a75657aa48e0a36454c54c2","modified":1509521557429},{"_id":"public/categories/技术随记/index.html","hash":"2836b5bddd89e17033f305e24f0944a48c37a20a","modified":1509521557430},{"_id":"public/categories/Hexo/index.html","hash":"5e8703619a3c71bf81842d3a4f5ae58e27a25526","modified":1509521557430},{"_id":"public/categories/js学习之路/index.html","hash":"6f2db44d454192286b6fa085e9413ddebf477356","modified":1509521557430},{"_id":"public/categories/java学习之路/index.html","hash":"ec2a1b466ef8e94952460b3aa7f04eac620ecd6b","modified":1509521557430},{"_id":"public/index.html","hash":"963f84d39a02fa3576acfd94e45d67ffb40919d6","modified":1509521557430},{"_id":"public/page/2/index.html","hash":"2f829df262be36498155f5da272795ed4e67b347","modified":1509521557430},{"_id":"public/tags/hexo/index.html","hash":"67b2c768fdd47a39a62d41e05cd87e298805c83f","modified":1509521557430},{"_id":"public/tags/js/index.html","hash":"2b2c76df1db66be58e56a8b3e9ee040d7e2725c5","modified":1509521557430},{"_id":"public/tags/nodejs/index.html","hash":"5e01e554b129264c031de2cb3dfb4d7bd25ba290","modified":1509521557430},{"_id":"public/tags/java/index.html","hash":"d9d221617e3ba2117e2a18f79fcc2f21a5ad1ad6","modified":1509521557430},{"_id":"public/tags/IOC（Inversion-of-Control）控制反转/index.html","hash":"6f0d6cc423d09c0ada80b7c5610c1b8a8170be3a","modified":1509521557431},{"_id":"public/robots.txt","hash":"f0f2f0a85b62b68df6e4aeb7982e97c8bb5a18f0","modified":1509521557436},{"_id":"public/CNAME","hash":"5735cff25598ab0ec6aaec3d3bbeb39cc7ae807c","modified":1509521557436},{"_id":"public/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1509521557436},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1509521557436},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1509521557436},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1509521557436},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1509521557436},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1509521557437},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1509521557437},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1509521557438},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1509521557438},{"_id":"public/images/favicon.ico","hash":"fe0c8bfc7c6ddc92f1cc27a6dfa3afaea7f48f7a","modified":1509521557438},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1509521557439},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1509521557439},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1509521557439},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1509521557439},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1509521557439},{"_id":"public/uploads/avatar.png","hash":"6e9fc74f352d248667c2b30c0558a83dd5e64501","modified":1509521557439},{"_id":"public/V1/images/backTop.png","hash":"d1786c51ffeb37663a57973ac5f592149a31f828","modified":1509521557439},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1509521557439},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1509521557439},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1509521557439},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1509521557440},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1509521557440},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1509521557440},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1509521557440},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1509521557440},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1509521557440},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1509521557440},{"_id":"public/V1/index.html","hash":"311e122819d0b26fad20881b6202d9922f33550d","modified":1509521558007},{"_id":"public/404.html","hash":"d76a76ed4ae90d22ee1689fdc8a310f0395ce24d","modified":1509521558007},{"_id":"public/css/main.css","hash":"a5aeafc8b03f439b249045b3af2d2ec4f8890ae2","modified":1509521558014},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1509521558014},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1509521558014},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1509521558014},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1509521558014},{"_id":"public/V1/css/reset.css","hash":"559d610d1aa00ba07ec47db1b60d91612829688c","modified":1509521558043},{"_id":"public/V1/css/index.css","hash":"4398d9c603a67c7bd80f3034b2ff67ed07bb2090","modified":1509521558043},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1509521558043},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1509521558044},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1509521558044},{"_id":"public/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1509521558044},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1509521558044},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1509521558045},{"_id":"public/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1509521558045},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1509521558046},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1509521558046},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1509521558046},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1509521558046},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1509521558046},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1509521558046},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1509521558047},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1509521558047},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1509521558047},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1509521558047},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1509521558048},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1509521558048},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1509521558048},{"_id":"public/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1509521558048},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1509521558048},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1509521558048},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1509521558050},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1509521558050},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1509521558050},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1509521558051},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1509521558051},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1509521558051},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1509521558051},{"_id":"public/V1/js/index.js","hash":"83328bb93c04e68466e16b8a1915b95f6d802c0f","modified":1509521558051},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1509521558051},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1509521558051},{"_id":"public/V1/js/data.js","hash":"186b624c666387e0b4fa6ebf8c8eddd152b2ae1d","modified":1509521558051},{"_id":"public/V1/js/jquery.js","hash":"66954fe621b0fee76d72d6c201d2bde2c0167ccf","modified":1509521558052},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1509521558052},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1509521558053},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1509521558054},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1509521558054},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1509521558055},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1509521558057},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1509521558057},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1509521558057},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1509521558058},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"964e8dac2cee79c4b49b5bc300675773f6518812","modified":1509521558151}],"Category":[{"name":"技术随记","_id":"cj9gq5qi100061wu6mhrkfrxd"},{"name":"Hexo","_id":"cj9gq5qi6000b1wu60y1l9ifb"},{"name":"js学习之路","_id":"cj9gq5qia000g1wu6poe8ua78"},{"name":"java学习之路","_id":"cj9gq5qig000j1wu6sztiby9w"}],"Data":[],"Page":[{"layout":"false","_content":"google-site-verification: googled4d8acf007d35fa4.html","source":"googled4d8acf007d35fa4.html","raw":"layout: false\n---\ngoogle-site-verification: googled4d8acf007d35fa4.html","date":"2017-06-19T02:23:12.118Z","updated":"2017-02-17T15:14:58.066Z","path":"googled4d8acf007d35fa4.html","title":"","comments":1,"_id":"cj9gq5qbl00001wu6e3kbid9v","content":"google-site-verification: googled4d8acf007d35fa4.html","excerpt":"","more":"google-site-verification: googled4d8acf007d35fa4.html"},{"layout":"false","_content":"AZ3Xok9oZV","source":"baidu_verify_AZ3Xok9oZV.html","raw":"layout: false\n---\nAZ3Xok9oZV","date":"2017-06-19T02:23:12.113Z","updated":"2017-02-17T15:14:44.695Z","path":"baidu_verify_AZ3Xok9oZV.html","title":"","comments":1,"_id":"cj9gq5qbm00011wu68kl0q7d8","content":"AZ3Xok9oZV","excerpt":"","more":"AZ3Xok9oZV"},{"title":"分类","date":"2017-02-16T07:29:20.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2017-02-16 15:29:20\ntype: \"categories\"\ncomments: false\n---\n","updated":"2017-02-16T07:30:07.278Z","path":"categories/index.html","layout":"page","_id":"cj9gq5qhu00031wu6bnwa1kqi","content":"","excerpt":"","more":""},{"title":"标签","date":"2017-02-16T07:18:16.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2017-02-16 15:18:16\ntype: \"tags\"\ncomments: false\n---\n","updated":"2017-02-16T07:30:05.439Z","path":"tags/index.html","layout":"page","_id":"cj9gq5qhz00051wu63ioey7im","content":"","excerpt":"","more":""}],"Post":[{"title":"Let's Encrypt证书使用","comments":0,"abbrlink":"ec1907ff","date":"2017-06-08T02:55:52.000Z","copyright":true,"_content":"\n## <center>Let's Encrypt证书使用<center>\n\n>certbot软件从Github直接下载，在CentOS6、7下执行都没有问题。\n\n### 设置yum代码库\n\n* certbot-auto运行是会自动连接下载依赖包，启用163(http://mirrors.163.com/.help/centos.html)和epel(https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F)库，提前准备好环境，更多查看https://certbot.eff.org/#centosrhel6-other\n\n``` bash\n1.wget http://mirrors.163.com/.help/CentOS6-Base-163.repo\n2.mv CentOS6-Base-163.repo /etc/yum.repos.d/\n3.wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm\n4.rpm -ivh epel-release-latest-6.noarch.rpm\n```\n\n修改CentOS6-Base-163.repo文件，将$releasever替换为6\n修改epel.repo文件，将$releasever替换为6，将http://download.fedoraproject.org/pub/epel修改为https://mirrors.tuna.tsinghua.edu.cn/epel\n运行以下命令生成缓存\n\n``` bash\nyum clean all\nyum makecache\n```\n安装git软件，也可直接从https://github.com/certbot/certbot下载\n``` bash\nyum install git\n```\n<!--more--> \n### 防火墙修改\n修改/etc/sysconfig/iptables\n``` bash\nvim /etc/sysconfig/iptables\n```\n\n查看是否有80、443端口允许访问记录\n``` bash\n-A INPUT -i eth0 -p tcp -m tcp --dport 80 -j ACCEPT\n-A INPUT -i eth0 -p tcp -m tcp --dport 443 -j ACCEPT\n```\n\n### 获取Let's Encrypt证书\n\ncertbot-auto运行是会自动连接下载依赖包，执行过程出现问题具体分析原因\n``` bash\ngit clone https://github.com/certbot/certbot\ncd certbot\n```\n\ncertbot-auto命令在root用户下执行，certbot-auto会执行更新certbot版本和安装依赖包，执行需要联网，有时较慢\n``` bash\n./certbot-auto certonly --standalone --email 你的邮箱 -d 你的域名\n```\n\n生成的证书放在/etc/letsencrypt/live/[网站域名]下，证书有效期3个月\n\n文件名| 内容\n-------|----------\ncert.pem | \t服务端证书\nchain.pem\t |浏览器需要的所有证书但不包括服务端证书，比如根证书和中间证书\nfullchain.pem |包括了cert.pem和chain.pem的内容\nprivkey.pem | 证书的私钥\n\n### Apache 设置\n\nApache测试版本\n\n``` bash\nServer version: Apache/2.4.6 (CentOS)\nServer built:   Nov 14 2016 18:04:44\n```\n\n修改/etc/httpd/conf.d/ssl.conf\n``` bash\nListen 443 https\n<VirtualHost _default_:443>\nHeader always set Strict-Transport-Security \"max-age=63072000; includeSubdomains; preload\"\nSSLEngine on\nSSLCertificateFile /etc/letsencrypt/live/域名/cert.pem\nSSLCertificateKeyFile /etc/letsencrypt/live/域名/privkey.pem\nSSLCertificateChainFile /etc/letsencrypt/live/域名/fullchain.pem\n</VirtualHost>\n```\n\nHSTS（HTTP Strict Transport Security）的作用是强制客户端（如浏览器）使用HTTPS与服务器创建连接。\n\n### Tomcat设置\n``` bash\ncp /etc/letsencrypt/live/域名/*.pem apache-tomcat-8.5.5/conf/\ncd apache-tomcat-8.5.5/conf/\nchown 用户:组 *.pem\n```\n\n修改conf/server.xml文件：\n\n``` bash\n<Connector port=\"8443\" protocol=\"org.apache.coyote.http11.Http11NioProtocol\"\n           maxThreads=\"150\" SSLEnabled=\"true\" >\n    <UpgradeProtocol className=\"org.apache.coyote.http2.Http2Protocol\" />\n    <SSLHostConfig>\n        <Certificate certificateKeyFile=\"conf/privkey.pem\"\n                     certificateFile=\"conf/cert.pem\"\n                     certificateChainFile=\"conf/fullchain.pem\"\n                     type=\"RSA\" />\n    </SSLHostConfig>\n</Connector>\n```\n\n### Nginx设置\n\n修改nginx的配置文件/usr/local/nginx/conf/nginx.conf，实现https转到内网tomcat的http服务，注：以下配置未实现tomcat识别来自https的请求，详细见问题3\n\n```\nserver {\n     listen 8443;\n     server_name localhost;\n     ssl on;\n     ssl_certificate /etc/letsencrypt/live/域名/fullchain.pem;\n     ssl_certificate_key /etc/letsencrypt/live/域名/privkey.pem;\n     server_name_in_redirect off;\n     proxy_set_header Host $host:$server_port;\n     proxy_connect_timeout 60s;\n     proxy_read_timeout 5400s;\n     proxy_send_timeout 5400s;\n     proxy_set_header X-Real-IP $remote_addr;\n     proxy_set_header REMOTE-HOST $remote_addr;\n     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n     index index.html index.htm index.jsp index.do;\n     location ^~ /ZhsqApp/{\n         proxy_pass  http://192.168.100.10:8080;\n         client_max_body_size    100m;\n     }\n }\n```\n\n### Weblogic 配置\n\nweblogic必须是10.3.6及以上版本，才能使用Let's Encrypt的证书，Let's Encrypt采用SHA256withRSA，低版本的不支持SHA256withRSA\n\n### 生成密钥库\n\n执行openssl命令生成fullchain_and_key.p12，执行keytool命令生成密钥库文件weblogic.jks\n\n```\nopenssl pkcs12 -export -in fullchain.pem -inkey privkey.pem -out fullchain_and_key.p12 -name weblogic -passout pass:123456\nkeytool -importkeystore -deststorepass 123456   -destkeystore weblogic.jks -srckeystore fullchain_and_key.p12 -srcstoretype PKCS12 -srcstorepass 123456  -alias weblogic\n```\n\nprivkey.pem、fullchain.pem为Let's Encrypt生成文件，密码可自行修改。注-name与-alias别名保存一致，-passout参数的pass:需保留。-passout与-srcstorepass密码保持一致， -deststorepass需记住在weblogic配置使用。\n\n### 生成信任库\n\n执行keytool命令生成信任库文件trust.jks\n```\nkeytool -importcert -alias rootCA -trustcacerts -file cert.pem -keystore trust.jks -storepass 123456\n```\n\ncert.pem为Let's Encrypt生成文件，密码可自行修改。 -storepass需记住在weblogic配置使用。\n\n### weblogic配置\n\n#### 启用SSL监听端口\n\n登录weblogic控制台 -> 服务器 -> 选择服务器管理 -> 配置标签 -> 一般信息子标签页 -> 启用 SSL 监听端口 -> 修改端口7002 -> 保存\n\n在Linux下设置端口小于1024的，需要使用管理员用户启动weblogic。\n\n\n![](http://f3e6036a.fromwiz.com/share/resources/b0c2bbb1-1a90-4b45-a09a-c7aa9804cd7c/index_files/64659649.png)\n\n#### 密钥库配置\n\n进入配置标签 -> 密钥库标签页\n\n1.密钥库点更改，选择定制标识和定制信任，点击保存。\n2.定制标识密钥库，填写weblogic.jks全路径\n定制标识密钥库类型，填写jks\n3.定制标识密钥库密码短语，填写生成密钥库时 -deststorepass写的密码\n4.确认定制标识密钥库密码短语，填写生成密钥库时 -deststorepass写的密码\n5.定制信任密钥库，填写trust.jks全路径\n6.定制信任密钥库类型，填写jks\n7.定制信任密钥库密码短语，填写生成信任库时 -storepass写的密码\n8.确认定制信任密钥库密码短语，填写生成信任库时 -storepass写的密码\n\n![](http://f3e6036a.fromwiz.com/share/resources/b0c2bbb1-1a90-4b45-a09a-c7aa9804cd7c/index_files/65091944.png)\n\n#### SSL配置\n\n进入配置标签 -> SSL标签页\n\n1.私有密钥别名，填写生成密钥库时的别名\n2.私有密钥密码短语，填写生成密钥库时 -deststorepass写的密码\n3.确认私有密钥密码短语，填写生成密钥库时 -deststorepass写的密码\n点击保存\n\n![](http://f3e6036a.fromwiz.com/share/resources/b0c2bbb1-1a90-4b45-a09a-c7aa9804cd7c/index_files/65673128.png)\n\nweblogic 10.3. 6 版本还需要做额外配置，SSL标签页中，点击高级，选中使用 JSSE SSL，点击保存\n\n![](http://f3e6036a.fromwiz.com/share/resources/b0c2bbb1-1a90-4b45-a09a-c7aa9804cd7c/index_files/65716484.png)\n\n重启weblogic服务，测试https访问。\n\n### 更新证书\n\n```\n./certbot-auto renew\n```\n\n更新证书之后，需要执行tomcat、weblogic对应配置内容。\n\n### 问题\n\n#### 问题1、Let's Encrypt安装好之后在PC端可以正常访问，但在手机端提示不受信任的\n\n主要原因是缺少中级证书。生成的LE证书后使用的需要使用fullchain.pem，打开后会发现有两段证书，第一段是LE的证书，第二段才是你网站的证书。而你只有网站的证书，而没有LE的证书。\n\n#### 问题2、如何关闭SSL3协议\n\n查看http://disablessl3.com如何关闭apache、nginx的ssl3协议\ntomcat修改，修改server.xml,\n\n\n```\n<Connector port=\"8443\" protocol=\"org.apache.coyote.http11.Http11NioProtocol\"\n               maxThreads=\"150\" SSLEnabled=\"true\"\n               sslProtocol=\"TLS\" sslEnabledProtocols=\"TLSv1,TLSv1.1,TLSv1.2\"  >\n```\n\n#### 问题3、nginx采用Let's Encrypt证书，如何实现https转http，后端识别来自https的请求\n\n1.修改nginx的配置文件\n修改nginx的配置文件/usr/local/nginx/conf/nginx.conf，实现https转到内网tomcat的http服务，注：以下配置未实现tomcat识别来自https的请求，详细见问题2\n\n```\nserver {\n    listen 8443;\n    server_name localhost;\n    ssl on;\n    ssl_certificate /etc/letsencrypt/live/域名/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/域名/privkey.pem;\n    server_name_in_redirect off;\n    proxy_set_header Host $host:$server_port;\n    proxy_connect_timeout 60s;\n    proxy_read_timeout 5400s;\n    proxy_send_timeout 5400s;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header REMOTE-HOST $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n              proxy_set_header X-Forwarded-Proto  $scheme;\n              proxy_set_header WL-Proxy-SSL true;\n              add_header Strict-Transport-Security \"max-age=63072000; includeSubdomains;   \";\n    index index.html index.htm index.jsp index.do;\n    location ^~ /ZhsqApp/{\n        proxy_pass  http://192.168.100.10:8080;\n        client_max_body_size    100m;\n    }\n  }\n```\n\n主要增加3处配置：\n> proxy_set_header X-Forwarded-Proto  $scheme; tomcat可识别参数\nproxy_set_header WL-Proxy-SSL true; weblogic可识别参数\nadd_header Strict-Transport-Security \"max-age=63072000; includeSubdomains; \"; 启用HSTS功能，浏览器在63072000秒时间内默认以https请求服务\n\n2.tomcat启用识别X-Forwarded-Proto设置\n修改配置文件server.xml，在Engine下添加下面内容\n\n```\n<Valve className=\"org.apache.catalina.valves.RemoteIpValve\"   remoteIpHeader=\"X-Forwarded-For\"\n           protocolHeader=\"X-Forwarded-Proto\"\n           protocolHeaderHttpsValue=\"https\"/>\n```\n\n做好上述配置，重启tomcat。request.getScheme()的值显示https\n另外，可参考Nginx SSL+tomcat集群,request.getScheme() 取到https正确的协议内容\n\n3.weblogic启用识别WL-Proxy-SSL 设置\n进入console界面，域名->配置->Web应用程序，勾选启用 WebLogic 插件，保存\n\n![](http://f3e6036a.fromwiz.com/share/resources/b0c2bbb1-1a90-4b45-a09a-c7aa9804cd7c/index_files/65317389.png)\n![](http://f3e6036a.fromwiz.com/share/resources/b0c2bbb1-1a90-4b45-a09a-c7aa9804cd7c/index_files/65382741.png)\n\n做好上述配置，重启weblogic。request.getScheme()的值显示https\n另外，可参考HTTPS/SSL/Spring Security doesn't work in both a load balancer and non-load balancer environment #424内容\n","source":"_posts/2017-06-08-Let-s-Encrypt证书使用.md","raw":"---\ntitle: Let's Encrypt证书使用\ncategories: 技术随记\ncomments: false\nabbrlink: ec1907ff\ndate: 2017-06-08 10:55:52\ncopyright: true\n---\n\n## <center>Let's Encrypt证书使用<center>\n\n>certbot软件从Github直接下载，在CentOS6、7下执行都没有问题。\n\n### 设置yum代码库\n\n* certbot-auto运行是会自动连接下载依赖包，启用163(http://mirrors.163.com/.help/centos.html)和epel(https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F)库，提前准备好环境，更多查看https://certbot.eff.org/#centosrhel6-other\n\n``` bash\n1.wget http://mirrors.163.com/.help/CentOS6-Base-163.repo\n2.mv CentOS6-Base-163.repo /etc/yum.repos.d/\n3.wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm\n4.rpm -ivh epel-release-latest-6.noarch.rpm\n```\n\n修改CentOS6-Base-163.repo文件，将$releasever替换为6\n修改epel.repo文件，将$releasever替换为6，将http://download.fedoraproject.org/pub/epel修改为https://mirrors.tuna.tsinghua.edu.cn/epel\n运行以下命令生成缓存\n\n``` bash\nyum clean all\nyum makecache\n```\n安装git软件，也可直接从https://github.com/certbot/certbot下载\n``` bash\nyum install git\n```\n<!--more--> \n### 防火墙修改\n修改/etc/sysconfig/iptables\n``` bash\nvim /etc/sysconfig/iptables\n```\n\n查看是否有80、443端口允许访问记录\n``` bash\n-A INPUT -i eth0 -p tcp -m tcp --dport 80 -j ACCEPT\n-A INPUT -i eth0 -p tcp -m tcp --dport 443 -j ACCEPT\n```\n\n### 获取Let's Encrypt证书\n\ncertbot-auto运行是会自动连接下载依赖包，执行过程出现问题具体分析原因\n``` bash\ngit clone https://github.com/certbot/certbot\ncd certbot\n```\n\ncertbot-auto命令在root用户下执行，certbot-auto会执行更新certbot版本和安装依赖包，执行需要联网，有时较慢\n``` bash\n./certbot-auto certonly --standalone --email 你的邮箱 -d 你的域名\n```\n\n生成的证书放在/etc/letsencrypt/live/[网站域名]下，证书有效期3个月\n\n文件名| 内容\n-------|----------\ncert.pem | \t服务端证书\nchain.pem\t |浏览器需要的所有证书但不包括服务端证书，比如根证书和中间证书\nfullchain.pem |包括了cert.pem和chain.pem的内容\nprivkey.pem | 证书的私钥\n\n### Apache 设置\n\nApache测试版本\n\n``` bash\nServer version: Apache/2.4.6 (CentOS)\nServer built:   Nov 14 2016 18:04:44\n```\n\n修改/etc/httpd/conf.d/ssl.conf\n``` bash\nListen 443 https\n<VirtualHost _default_:443>\nHeader always set Strict-Transport-Security \"max-age=63072000; includeSubdomains; preload\"\nSSLEngine on\nSSLCertificateFile /etc/letsencrypt/live/域名/cert.pem\nSSLCertificateKeyFile /etc/letsencrypt/live/域名/privkey.pem\nSSLCertificateChainFile /etc/letsencrypt/live/域名/fullchain.pem\n</VirtualHost>\n```\n\nHSTS（HTTP Strict Transport Security）的作用是强制客户端（如浏览器）使用HTTPS与服务器创建连接。\n\n### Tomcat设置\n``` bash\ncp /etc/letsencrypt/live/域名/*.pem apache-tomcat-8.5.5/conf/\ncd apache-tomcat-8.5.5/conf/\nchown 用户:组 *.pem\n```\n\n修改conf/server.xml文件：\n\n``` bash\n<Connector port=\"8443\" protocol=\"org.apache.coyote.http11.Http11NioProtocol\"\n           maxThreads=\"150\" SSLEnabled=\"true\" >\n    <UpgradeProtocol className=\"org.apache.coyote.http2.Http2Protocol\" />\n    <SSLHostConfig>\n        <Certificate certificateKeyFile=\"conf/privkey.pem\"\n                     certificateFile=\"conf/cert.pem\"\n                     certificateChainFile=\"conf/fullchain.pem\"\n                     type=\"RSA\" />\n    </SSLHostConfig>\n</Connector>\n```\n\n### Nginx设置\n\n修改nginx的配置文件/usr/local/nginx/conf/nginx.conf，实现https转到内网tomcat的http服务，注：以下配置未实现tomcat识别来自https的请求，详细见问题3\n\n```\nserver {\n     listen 8443;\n     server_name localhost;\n     ssl on;\n     ssl_certificate /etc/letsencrypt/live/域名/fullchain.pem;\n     ssl_certificate_key /etc/letsencrypt/live/域名/privkey.pem;\n     server_name_in_redirect off;\n     proxy_set_header Host $host:$server_port;\n     proxy_connect_timeout 60s;\n     proxy_read_timeout 5400s;\n     proxy_send_timeout 5400s;\n     proxy_set_header X-Real-IP $remote_addr;\n     proxy_set_header REMOTE-HOST $remote_addr;\n     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n     index index.html index.htm index.jsp index.do;\n     location ^~ /ZhsqApp/{\n         proxy_pass  http://192.168.100.10:8080;\n         client_max_body_size    100m;\n     }\n }\n```\n\n### Weblogic 配置\n\nweblogic必须是10.3.6及以上版本，才能使用Let's Encrypt的证书，Let's Encrypt采用SHA256withRSA，低版本的不支持SHA256withRSA\n\n### 生成密钥库\n\n执行openssl命令生成fullchain_and_key.p12，执行keytool命令生成密钥库文件weblogic.jks\n\n```\nopenssl pkcs12 -export -in fullchain.pem -inkey privkey.pem -out fullchain_and_key.p12 -name weblogic -passout pass:123456\nkeytool -importkeystore -deststorepass 123456   -destkeystore weblogic.jks -srckeystore fullchain_and_key.p12 -srcstoretype PKCS12 -srcstorepass 123456  -alias weblogic\n```\n\nprivkey.pem、fullchain.pem为Let's Encrypt生成文件，密码可自行修改。注-name与-alias别名保存一致，-passout参数的pass:需保留。-passout与-srcstorepass密码保持一致， -deststorepass需记住在weblogic配置使用。\n\n### 生成信任库\n\n执行keytool命令生成信任库文件trust.jks\n```\nkeytool -importcert -alias rootCA -trustcacerts -file cert.pem -keystore trust.jks -storepass 123456\n```\n\ncert.pem为Let's Encrypt生成文件，密码可自行修改。 -storepass需记住在weblogic配置使用。\n\n### weblogic配置\n\n#### 启用SSL监听端口\n\n登录weblogic控制台 -> 服务器 -> 选择服务器管理 -> 配置标签 -> 一般信息子标签页 -> 启用 SSL 监听端口 -> 修改端口7002 -> 保存\n\n在Linux下设置端口小于1024的，需要使用管理员用户启动weblogic。\n\n\n![](http://f3e6036a.fromwiz.com/share/resources/b0c2bbb1-1a90-4b45-a09a-c7aa9804cd7c/index_files/64659649.png)\n\n#### 密钥库配置\n\n进入配置标签 -> 密钥库标签页\n\n1.密钥库点更改，选择定制标识和定制信任，点击保存。\n2.定制标识密钥库，填写weblogic.jks全路径\n定制标识密钥库类型，填写jks\n3.定制标识密钥库密码短语，填写生成密钥库时 -deststorepass写的密码\n4.确认定制标识密钥库密码短语，填写生成密钥库时 -deststorepass写的密码\n5.定制信任密钥库，填写trust.jks全路径\n6.定制信任密钥库类型，填写jks\n7.定制信任密钥库密码短语，填写生成信任库时 -storepass写的密码\n8.确认定制信任密钥库密码短语，填写生成信任库时 -storepass写的密码\n\n![](http://f3e6036a.fromwiz.com/share/resources/b0c2bbb1-1a90-4b45-a09a-c7aa9804cd7c/index_files/65091944.png)\n\n#### SSL配置\n\n进入配置标签 -> SSL标签页\n\n1.私有密钥别名，填写生成密钥库时的别名\n2.私有密钥密码短语，填写生成密钥库时 -deststorepass写的密码\n3.确认私有密钥密码短语，填写生成密钥库时 -deststorepass写的密码\n点击保存\n\n![](http://f3e6036a.fromwiz.com/share/resources/b0c2bbb1-1a90-4b45-a09a-c7aa9804cd7c/index_files/65673128.png)\n\nweblogic 10.3. 6 版本还需要做额外配置，SSL标签页中，点击高级，选中使用 JSSE SSL，点击保存\n\n![](http://f3e6036a.fromwiz.com/share/resources/b0c2bbb1-1a90-4b45-a09a-c7aa9804cd7c/index_files/65716484.png)\n\n重启weblogic服务，测试https访问。\n\n### 更新证书\n\n```\n./certbot-auto renew\n```\n\n更新证书之后，需要执行tomcat、weblogic对应配置内容。\n\n### 问题\n\n#### 问题1、Let's Encrypt安装好之后在PC端可以正常访问，但在手机端提示不受信任的\n\n主要原因是缺少中级证书。生成的LE证书后使用的需要使用fullchain.pem，打开后会发现有两段证书，第一段是LE的证书，第二段才是你网站的证书。而你只有网站的证书，而没有LE的证书。\n\n#### 问题2、如何关闭SSL3协议\n\n查看http://disablessl3.com如何关闭apache、nginx的ssl3协议\ntomcat修改，修改server.xml,\n\n\n```\n<Connector port=\"8443\" protocol=\"org.apache.coyote.http11.Http11NioProtocol\"\n               maxThreads=\"150\" SSLEnabled=\"true\"\n               sslProtocol=\"TLS\" sslEnabledProtocols=\"TLSv1,TLSv1.1,TLSv1.2\"  >\n```\n\n#### 问题3、nginx采用Let's Encrypt证书，如何实现https转http，后端识别来自https的请求\n\n1.修改nginx的配置文件\n修改nginx的配置文件/usr/local/nginx/conf/nginx.conf，实现https转到内网tomcat的http服务，注：以下配置未实现tomcat识别来自https的请求，详细见问题2\n\n```\nserver {\n    listen 8443;\n    server_name localhost;\n    ssl on;\n    ssl_certificate /etc/letsencrypt/live/域名/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/域名/privkey.pem;\n    server_name_in_redirect off;\n    proxy_set_header Host $host:$server_port;\n    proxy_connect_timeout 60s;\n    proxy_read_timeout 5400s;\n    proxy_send_timeout 5400s;\n    proxy_set_header X-Real-IP $remote_addr;\n    proxy_set_header REMOTE-HOST $remote_addr;\n    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n              proxy_set_header X-Forwarded-Proto  $scheme;\n              proxy_set_header WL-Proxy-SSL true;\n              add_header Strict-Transport-Security \"max-age=63072000; includeSubdomains;   \";\n    index index.html index.htm index.jsp index.do;\n    location ^~ /ZhsqApp/{\n        proxy_pass  http://192.168.100.10:8080;\n        client_max_body_size    100m;\n    }\n  }\n```\n\n主要增加3处配置：\n> proxy_set_header X-Forwarded-Proto  $scheme; tomcat可识别参数\nproxy_set_header WL-Proxy-SSL true; weblogic可识别参数\nadd_header Strict-Transport-Security \"max-age=63072000; includeSubdomains; \"; 启用HSTS功能，浏览器在63072000秒时间内默认以https请求服务\n\n2.tomcat启用识别X-Forwarded-Proto设置\n修改配置文件server.xml，在Engine下添加下面内容\n\n```\n<Valve className=\"org.apache.catalina.valves.RemoteIpValve\"   remoteIpHeader=\"X-Forwarded-For\"\n           protocolHeader=\"X-Forwarded-Proto\"\n           protocolHeaderHttpsValue=\"https\"/>\n```\n\n做好上述配置，重启tomcat。request.getScheme()的值显示https\n另外，可参考Nginx SSL+tomcat集群,request.getScheme() 取到https正确的协议内容\n\n3.weblogic启用识别WL-Proxy-SSL 设置\n进入console界面，域名->配置->Web应用程序，勾选启用 WebLogic 插件，保存\n\n![](http://f3e6036a.fromwiz.com/share/resources/b0c2bbb1-1a90-4b45-a09a-c7aa9804cd7c/index_files/65317389.png)\n![](http://f3e6036a.fromwiz.com/share/resources/b0c2bbb1-1a90-4b45-a09a-c7aa9804cd7c/index_files/65382741.png)\n\n做好上述配置，重启weblogic。request.getScheme()的值显示https\n另外，可参考HTTPS/SSL/Spring Security doesn't work in both a load balancer and non-load balancer environment #424内容\n","slug":"Let-s-Encrypt证书使用","published":1,"updated":"2017-11-01T07:25:34.455Z","layout":"post","photos":[],"link":"","_id":"cj9gq5qhr00021wu6ytnkzm61","content":"<h2 id=\"Let’s-Encrypt证书使用\"><a href=\"#Let’s-Encrypt证书使用\" class=\"headerlink\" title=\"Let’s Encrypt证书使用\"></a><center>Let’s Encrypt证书使用<center></center></center></h2><blockquote>\n<p>certbot软件从Github直接下载，在CentOS6、7下执行都没有问题。</p>\n</blockquote>\n<h3 id=\"设置yum代码库\"><a href=\"#设置yum代码库\" class=\"headerlink\" title=\"设置yum代码库\"></a>设置yum代码库</h3><ul>\n<li>certbot-auto运行是会自动连接下载依赖包，启用163(<a href=\"http://mirrors.163.com/.help/centos.html)和epel(https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F)库，提前准备好环境，更多查看https://certbot.eff.org/#centosrhel6-other\" target=\"_blank\" rel=\"external\">http://mirrors.163.com/.help/centos.html)和epel(https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F)库，提前准备好环境，更多查看https://certbot.eff.org/#centosrhel6-other</a></li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">1.wget http://mirrors.163.com/.help/CentOS6-Base-163.repo</div><div class=\"line\">2.mv CentOS6-Base-163.repo /etc/yum.repos.d/</div><div class=\"line\">3.wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm</div><div class=\"line\">4.rpm -ivh epel-release-latest-6.noarch.rpm</div></pre></td></tr></table></figure>\n<p>修改CentOS6-Base-163.repo文件，将$releasever替换为6<br>修改epel.repo文件，将$releasever替换为6，将<a href=\"http://download.fedoraproject.org/pub/epel修改为https://mirrors.tuna.tsinghua.edu.cn/epel\" target=\"_blank\" rel=\"external\">http://download.fedoraproject.org/pub/epel修改为https://mirrors.tuna.tsinghua.edu.cn/epel</a><br>运行以下命令生成缓存</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum clean all</div><div class=\"line\">yum makecache</div></pre></td></tr></table></figure>\n<p>安装git软件，也可直接从<a href=\"https://github.com/certbot/certbot下载\" target=\"_blank\" rel=\"external\">https://github.com/certbot/certbot下载</a><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install git</div></pre></td></tr></table></figure></p>\n<a id=\"more\"></a> \n<h3 id=\"防火墙修改\"><a href=\"#防火墙修改\" class=\"headerlink\" title=\"防火墙修改\"></a>防火墙修改</h3><p>修改/etc/sysconfig/iptables<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim /etc/sysconfig/iptables</div></pre></td></tr></table></figure></p>\n<p>查看是否有80、443端口允许访问记录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">-A INPUT -i eth0 -p tcp -m tcp --dport 80 -j ACCEPT</div><div class=\"line\">-A INPUT -i eth0 -p tcp -m tcp --dport 443 -j ACCEPT</div></pre></td></tr></table></figure></p>\n<h3 id=\"获取Let’s-Encrypt证书\"><a href=\"#获取Let’s-Encrypt证书\" class=\"headerlink\" title=\"获取Let’s Encrypt证书\"></a>获取Let’s Encrypt证书</h3><p>certbot-auto运行是会自动连接下载依赖包，执行过程出现问题具体分析原因<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/certbot/certbot</div><div class=\"line\"><span class=\"built_in\">cd</span> certbot</div></pre></td></tr></table></figure></p>\n<p>certbot-auto命令在root用户下执行，certbot-auto会执行更新certbot版本和安装依赖包，执行需要联网，有时较慢<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./certbot-auto certonly --standalone --email 你的邮箱 <span class=\"_\">-d</span> 你的域名</div></pre></td></tr></table></figure></p>\n<p>生成的证书放在/etc/letsencrypt/live/[网站域名]下，证书有效期3个月</p>\n<table>\n<thead>\n<tr>\n<th>文件名</th>\n<th>内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>cert.pem</td>\n<td>服务端证书</td>\n</tr>\n<tr>\n<td>chain.pem</td>\n<td>浏览器需要的所有证书但不包括服务端证书，比如根证书和中间证书</td>\n</tr>\n<tr>\n<td>fullchain.pem</td>\n<td>包括了cert.pem和chain.pem的内容</td>\n</tr>\n<tr>\n<td>privkey.pem</td>\n<td>证书的私钥</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Apache-设置\"><a href=\"#Apache-设置\" class=\"headerlink\" title=\"Apache 设置\"></a>Apache 设置</h3><p>Apache测试版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Server version: Apache/2.4.6 (CentOS)</div><div class=\"line\">Server built:   Nov 14 2016 18:04:44</div></pre></td></tr></table></figure>\n<p>修改/etc/httpd/conf.d/ssl.conf<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">Listen 443 https</div><div class=\"line\">&lt;VirtualHost _default_:443&gt;</div><div class=\"line\">Header always <span class=\"built_in\">set</span> Strict-Transport-Security <span class=\"string\">\"max-age=63072000; includeSubdomains; preload\"</span></div><div class=\"line\">SSLEngine on</div><div class=\"line\">SSLCertificateFile /etc/letsencrypt/live/域名/cert.pem</div><div class=\"line\">SSLCertificateKeyFile /etc/letsencrypt/live/域名/privkey.pem</div><div class=\"line\">SSLCertificateChainFile /etc/letsencrypt/live/域名/fullchain.pem</div><div class=\"line\">&lt;/VirtualHost&gt;</div></pre></td></tr></table></figure></p>\n<p>HSTS（HTTP Strict Transport Security）的作用是强制客户端（如浏览器）使用HTTPS与服务器创建连接。</p>\n<h3 id=\"Tomcat设置\"><a href=\"#Tomcat设置\" class=\"headerlink\" title=\"Tomcat设置\"></a>Tomcat设置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp /etc/letsencrypt/live/域名/*.pem apache-tomcat-8.5.5/conf/</div><div class=\"line\"><span class=\"built_in\">cd</span> apache-tomcat-8.5.5/conf/</div><div class=\"line\">chown 用户:组 *.pem</div></pre></td></tr></table></figure>\n<p>修改conf/server.xml文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Connector port=<span class=\"string\">\"8443\"</span> protocol=<span class=\"string\">\"org.apache.coyote.http11.Http11NioProtocol\"</span></div><div class=\"line\">           maxThreads=<span class=\"string\">\"150\"</span> SSLEnabled=<span class=\"string\">\"true\"</span> &gt;</div><div class=\"line\">    &lt;UpgradeProtocol className=<span class=\"string\">\"org.apache.coyote.http2.Http2Protocol\"</span> /&gt;</div><div class=\"line\">    &lt;SSLHostConfig&gt;</div><div class=\"line\">        &lt;Certificate certificateKeyFile=<span class=\"string\">\"conf/privkey.pem\"</span></div><div class=\"line\">                     certificateFile=<span class=\"string\">\"conf/cert.pem\"</span></div><div class=\"line\">                     certificateChainFile=<span class=\"string\">\"conf/fullchain.pem\"</span></div><div class=\"line\">                     <span class=\"built_in\">type</span>=<span class=\"string\">\"RSA\"</span> /&gt;</div><div class=\"line\">    &lt;/SSLHostConfig&gt;</div><div class=\"line\">&lt;/Connector&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"Nginx设置\"><a href=\"#Nginx设置\" class=\"headerlink\" title=\"Nginx设置\"></a>Nginx设置</h3><p>修改nginx的配置文件/usr/local/nginx/conf/nginx.conf，实现https转到内网tomcat的http服务，注：以下配置未实现tomcat识别来自https的请求，详细见问题3</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">     listen 8443;</div><div class=\"line\">     server_name localhost;</div><div class=\"line\">     ssl on;</div><div class=\"line\">     ssl_certificate /etc/letsencrypt/live/域名/fullchain.pem;</div><div class=\"line\">     ssl_certificate_key /etc/letsencrypt/live/域名/privkey.pem;</div><div class=\"line\">     server_name_in_redirect off;</div><div class=\"line\">     proxy_set_header Host $host:$server_port;</div><div class=\"line\">     proxy_connect_timeout 60s;</div><div class=\"line\">     proxy_read_timeout 5400s;</div><div class=\"line\">     proxy_send_timeout 5400s;</div><div class=\"line\">     proxy_set_header X-Real-IP $remote_addr;</div><div class=\"line\">     proxy_set_header REMOTE-HOST $remote_addr;</div><div class=\"line\">     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class=\"line\">     index index.html index.htm index.jsp index.do;</div><div class=\"line\">     location ^~ /ZhsqApp/&#123;</div><div class=\"line\">         proxy_pass  http://192.168.100.10:8080;</div><div class=\"line\">         client_max_body_size    100m;</div><div class=\"line\">     &#125;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Weblogic-配置\"><a href=\"#Weblogic-配置\" class=\"headerlink\" title=\"Weblogic 配置\"></a>Weblogic 配置</h3><p>weblogic必须是10.3.6及以上版本，才能使用Let’s Encrypt的证书，Let’s Encrypt采用SHA256withRSA，低版本的不支持SHA256withRSA</p>\n<h3 id=\"生成密钥库\"><a href=\"#生成密钥库\" class=\"headerlink\" title=\"生成密钥库\"></a>生成密钥库</h3><p>执行openssl命令生成fullchain_and_key.p12，执行keytool命令生成密钥库文件weblogic.jks</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">openssl pkcs12 -export -in fullchain.pem -inkey privkey.pem -out fullchain_and_key.p12 -name weblogic -passout pass:123456</div><div class=\"line\">keytool -importkeystore -deststorepass 123456   -destkeystore weblogic.jks -srckeystore fullchain_and_key.p12 -srcstoretype PKCS12 -srcstorepass 123456  -alias weblogic</div></pre></td></tr></table></figure>\n<p>privkey.pem、fullchain.pem为Let’s Encrypt生成文件，密码可自行修改。注-name与-alias别名保存一致，-passout参数的pass:需保留。-passout与-srcstorepass密码保持一致， -deststorepass需记住在weblogic配置使用。</p>\n<h3 id=\"生成信任库\"><a href=\"#生成信任库\" class=\"headerlink\" title=\"生成信任库\"></a>生成信任库</h3><p>执行keytool命令生成信任库文件trust.jks<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">keytool -importcert -alias rootCA -trustcacerts -file cert.pem -keystore trust.jks -storepass 123456</div></pre></td></tr></table></figure></p>\n<p>cert.pem为Let’s Encrypt生成文件，密码可自行修改。 -storepass需记住在weblogic配置使用。</p>\n<h3 id=\"weblogic配置\"><a href=\"#weblogic配置\" class=\"headerlink\" title=\"weblogic配置\"></a>weblogic配置</h3><h4 id=\"启用SSL监听端口\"><a href=\"#启用SSL监听端口\" class=\"headerlink\" title=\"启用SSL监听端口\"></a>启用SSL监听端口</h4><p>登录weblogic控制台 -&gt; 服务器 -&gt; 选择服务器管理 -&gt; 配置标签 -&gt; 一般信息子标签页 -&gt; 启用 SSL 监听端口 -&gt; 修改端口7002 -&gt; 保存</p>\n<p>在Linux下设置端口小于1024的，需要使用管理员用户启动weblogic。</p>\n<p><img src=\"http://f3e6036a.fromwiz.com/share/resources/b0c2bbb1-1a90-4b45-a09a-c7aa9804cd7c/index_files/64659649.png\" alt=\"\"></p>\n<h4 id=\"密钥库配置\"><a href=\"#密钥库配置\" class=\"headerlink\" title=\"密钥库配置\"></a>密钥库配置</h4><p>进入配置标签 -&gt; 密钥库标签页</p>\n<p>1.密钥库点更改，选择定制标识和定制信任，点击保存。<br>2.定制标识密钥库，填写weblogic.jks全路径<br>定制标识密钥库类型，填写jks<br>3.定制标识密钥库密码短语，填写生成密钥库时 -deststorepass写的密码<br>4.确认定制标识密钥库密码短语，填写生成密钥库时 -deststorepass写的密码<br>5.定制信任密钥库，填写trust.jks全路径<br>6.定制信任密钥库类型，填写jks<br>7.定制信任密钥库密码短语，填写生成信任库时 -storepass写的密码<br>8.确认定制信任密钥库密码短语，填写生成信任库时 -storepass写的密码</p>\n<p><img src=\"http://f3e6036a.fromwiz.com/share/resources/b0c2bbb1-1a90-4b45-a09a-c7aa9804cd7c/index_files/65091944.png\" alt=\"\"></p>\n<h4 id=\"SSL配置\"><a href=\"#SSL配置\" class=\"headerlink\" title=\"SSL配置\"></a>SSL配置</h4><p>进入配置标签 -&gt; SSL标签页</p>\n<p>1.私有密钥别名，填写生成密钥库时的别名<br>2.私有密钥密码短语，填写生成密钥库时 -deststorepass写的密码<br>3.确认私有密钥密码短语，填写生成密钥库时 -deststorepass写的密码<br>点击保存</p>\n<p><img src=\"http://f3e6036a.fromwiz.com/share/resources/b0c2bbb1-1a90-4b45-a09a-c7aa9804cd7c/index_files/65673128.png\" alt=\"\"></p>\n<p>weblogic 10.3. 6 版本还需要做额外配置，SSL标签页中，点击高级，选中使用 JSSE SSL，点击保存</p>\n<p><img src=\"http://f3e6036a.fromwiz.com/share/resources/b0c2bbb1-1a90-4b45-a09a-c7aa9804cd7c/index_files/65716484.png\" alt=\"\"></p>\n<p>重启weblogic服务，测试https访问。</p>\n<h3 id=\"更新证书\"><a href=\"#更新证书\" class=\"headerlink\" title=\"更新证书\"></a>更新证书</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./certbot-auto renew</div></pre></td></tr></table></figure>\n<p>更新证书之后，需要执行tomcat、weblogic对应配置内容。</p>\n<h3 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h3><h4 id=\"问题1、Let’s-Encrypt安装好之后在PC端可以正常访问，但在手机端提示不受信任的\"><a href=\"#问题1、Let’s-Encrypt安装好之后在PC端可以正常访问，但在手机端提示不受信任的\" class=\"headerlink\" title=\"问题1、Let’s Encrypt安装好之后在PC端可以正常访问，但在手机端提示不受信任的\"></a>问题1、Let’s Encrypt安装好之后在PC端可以正常访问，但在手机端提示不受信任的</h4><p>主要原因是缺少中级证书。生成的LE证书后使用的需要使用fullchain.pem，打开后会发现有两段证书，第一段是LE的证书，第二段才是你网站的证书。而你只有网站的证书，而没有LE的证书。</p>\n<h4 id=\"问题2、如何关闭SSL3协议\"><a href=\"#问题2、如何关闭SSL3协议\" class=\"headerlink\" title=\"问题2、如何关闭SSL3协议\"></a>问题2、如何关闭SSL3协议</h4><p>查看<a href=\"http://disablessl3.com如何关闭apache、nginx的ssl3协议\" target=\"_blank\" rel=\"external\">http://disablessl3.com如何关闭apache、nginx的ssl3协议</a><br>tomcat修改，修改server.xml,</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Connector port=&quot;8443&quot; protocol=&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</div><div class=\"line\">               maxThreads=&quot;150&quot; SSLEnabled=&quot;true&quot;</div><div class=\"line\">               sslProtocol=&quot;TLS&quot; sslEnabledProtocols=&quot;TLSv1,TLSv1.1,TLSv1.2&quot;  &gt;</div></pre></td></tr></table></figure>\n<h4 id=\"问题3、nginx采用Let’s-Encrypt证书，如何实现https转http，后端识别来自https的请求\"><a href=\"#问题3、nginx采用Let’s-Encrypt证书，如何实现https转http，后端识别来自https的请求\" class=\"headerlink\" title=\"问题3、nginx采用Let’s Encrypt证书，如何实现https转http，后端识别来自https的请求\"></a>问题3、nginx采用Let’s Encrypt证书，如何实现https转http，后端识别来自https的请求</h4><p>1.修改nginx的配置文件<br>修改nginx的配置文件/usr/local/nginx/conf/nginx.conf，实现https转到内网tomcat的http服务，注：以下配置未实现tomcat识别来自https的请求，详细见问题2</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">    listen 8443;</div><div class=\"line\">    server_name localhost;</div><div class=\"line\">    ssl on;</div><div class=\"line\">    ssl_certificate /etc/letsencrypt/live/域名/fullchain.pem;</div><div class=\"line\">    ssl_certificate_key /etc/letsencrypt/live/域名/privkey.pem;</div><div class=\"line\">    server_name_in_redirect off;</div><div class=\"line\">    proxy_set_header Host $host:$server_port;</div><div class=\"line\">    proxy_connect_timeout 60s;</div><div class=\"line\">    proxy_read_timeout 5400s;</div><div class=\"line\">    proxy_send_timeout 5400s;</div><div class=\"line\">    proxy_set_header X-Real-IP $remote_addr;</div><div class=\"line\">    proxy_set_header REMOTE-HOST $remote_addr;</div><div class=\"line\">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class=\"line\">              proxy_set_header X-Forwarded-Proto  $scheme;</div><div class=\"line\">              proxy_set_header WL-Proxy-SSL true;</div><div class=\"line\">              add_header Strict-Transport-Security &quot;max-age=63072000; includeSubdomains;   &quot;;</div><div class=\"line\">    index index.html index.htm index.jsp index.do;</div><div class=\"line\">    location ^~ /ZhsqApp/&#123;</div><div class=\"line\">        proxy_pass  http://192.168.100.10:8080;</div><div class=\"line\">        client_max_body_size    100m;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div></pre></td></tr></table></figure>\n<p>主要增加3处配置：</p>\n<blockquote>\n<p>proxy_set_header X-Forwarded-Proto  $scheme; tomcat可识别参数<br>proxy_set_header WL-Proxy-SSL true; weblogic可识别参数<br>add_header Strict-Transport-Security “max-age=63072000; includeSubdomains; “; 启用HSTS功能，浏览器在63072000秒时间内默认以https请求服务</p>\n</blockquote>\n<p>2.tomcat启用识别X-Forwarded-Proto设置<br>修改配置文件server.xml，在Engine下添加下面内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Valve className=&quot;org.apache.catalina.valves.RemoteIpValve&quot;   remoteIpHeader=&quot;X-Forwarded-For&quot;</div><div class=\"line\">           protocolHeader=&quot;X-Forwarded-Proto&quot;</div><div class=\"line\">           protocolHeaderHttpsValue=&quot;https&quot;/&gt;</div></pre></td></tr></table></figure>\n<p>做好上述配置，重启tomcat。request.getScheme()的值显示https<br>另外，可参考Nginx SSL+tomcat集群,request.getScheme() 取到https正确的协议内容</p>\n<p>3.weblogic启用识别WL-Proxy-SSL 设置<br>进入console界面，域名-&gt;配置-&gt;Web应用程序，勾选启用 WebLogic 插件，保存</p>\n<p><img src=\"http://f3e6036a.fromwiz.com/share/resources/b0c2bbb1-1a90-4b45-a09a-c7aa9804cd7c/index_files/65317389.png\" alt=\"\"><br><img src=\"http://f3e6036a.fromwiz.com/share/resources/b0c2bbb1-1a90-4b45-a09a-c7aa9804cd7c/index_files/65382741.png\" alt=\"\"></p>\n<p>做好上述配置，重启weblogic。request.getScheme()的值显示https<br>另外，可参考HTTPS/SSL/Spring Security doesn’t work in both a load balancer and non-load balancer environment #424内容</p>\n","excerpt":"<h2 id=\"Let’s-Encrypt证书使用\"><a href=\"#Let’s-Encrypt证书使用\" class=\"headerlink\" title=\"Let’s Encrypt证书使用\"></a><center>Let’s Encrypt证书使用<center></h2><blockquote>\n<p>certbot软件从Github直接下载，在CentOS6、7下执行都没有问题。</p>\n</blockquote>\n<h3 id=\"设置yum代码库\"><a href=\"#设置yum代码库\" class=\"headerlink\" title=\"设置yum代码库\"></a>设置yum代码库</h3><ul>\n<li>certbot-auto运行是会自动连接下载依赖包，启用163(<a href=\"http://mirrors.163.com/.help/centos.html)和epel(https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F)库，提前准备好环境，更多查看https://certbot.eff.org/#centosrhel6-other\">http://mirrors.163.com/.help/centos.html)和epel(https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F)库，提前准备好环境，更多查看https://certbot.eff.org/#centosrhel6-other</a></li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">1.wget http://mirrors.163.com/.help/CentOS6-Base-163.repo</div><div class=\"line\">2.mv CentOS6-Base-163.repo /etc/yum.repos.d/</div><div class=\"line\">3.wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm</div><div class=\"line\">4.rpm -ivh epel-release-latest-6.noarch.rpm</div></pre></td></tr></table></figure>\n<p>修改CentOS6-Base-163.repo文件，将$releasever替换为6<br>修改epel.repo文件，将$releasever替换为6，将<a href=\"http://download.fedoraproject.org/pub/epel修改为https://mirrors.tuna.tsinghua.edu.cn/epel\">http://download.fedoraproject.org/pub/epel修改为https://mirrors.tuna.tsinghua.edu.cn/epel</a><br>运行以下命令生成缓存</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum clean all</div><div class=\"line\">yum makecache</div></pre></td></tr></table></figure>\n<p>安装git软件，也可直接从<a href=\"https://github.com/certbot/certbot下载\">https://github.com/certbot/certbot下载</a><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">yum install git</div></pre></td></tr></table></figure></p>","more":"<h3 id=\"防火墙修改\"><a href=\"#防火墙修改\" class=\"headerlink\" title=\"防火墙修改\"></a>防火墙修改</h3><p>修改/etc/sysconfig/iptables<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">vim /etc/sysconfig/iptables</div></pre></td></tr></table></figure></p>\n<p>查看是否有80、443端口允许访问记录<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">-A INPUT -i eth0 -p tcp -m tcp --dport 80 -j ACCEPT</div><div class=\"line\">-A INPUT -i eth0 -p tcp -m tcp --dport 443 -j ACCEPT</div></pre></td></tr></table></figure></p>\n<h3 id=\"获取Let’s-Encrypt证书\"><a href=\"#获取Let’s-Encrypt证书\" class=\"headerlink\" title=\"获取Let’s Encrypt证书\"></a>获取Let’s Encrypt证书</h3><p>certbot-auto运行是会自动连接下载依赖包，执行过程出现问题具体分析原因<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/certbot/certbot</div><div class=\"line\"><span class=\"built_in\">cd</span> certbot</div></pre></td></tr></table></figure></p>\n<p>certbot-auto命令在root用户下执行，certbot-auto会执行更新certbot版本和安装依赖包，执行需要联网，有时较慢<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./certbot-auto certonly --standalone --email 你的邮箱 <span class=\"_\">-d</span> 你的域名</div></pre></td></tr></table></figure></p>\n<p>生成的证书放在/etc/letsencrypt/live/[网站域名]下，证书有效期3个月</p>\n<table>\n<thead>\n<tr>\n<th>文件名</th>\n<th>内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>cert.pem</td>\n<td>服务端证书</td>\n</tr>\n<tr>\n<td>chain.pem</td>\n<td>浏览器需要的所有证书但不包括服务端证书，比如根证书和中间证书</td>\n</tr>\n<tr>\n<td>fullchain.pem</td>\n<td>包括了cert.pem和chain.pem的内容</td>\n</tr>\n<tr>\n<td>privkey.pem</td>\n<td>证书的私钥</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Apache-设置\"><a href=\"#Apache-设置\" class=\"headerlink\" title=\"Apache 设置\"></a>Apache 设置</h3><p>Apache测试版本</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">Server version: Apache/2.4.6 (CentOS)</div><div class=\"line\">Server built:   Nov 14 2016 18:04:44</div></pre></td></tr></table></figure>\n<p>修改/etc/httpd/conf.d/ssl.conf<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">Listen 443 https</div><div class=\"line\">&lt;VirtualHost _default_:443&gt;</div><div class=\"line\">Header always <span class=\"built_in\">set</span> Strict-Transport-Security <span class=\"string\">\"max-age=63072000; includeSubdomains; preload\"</span></div><div class=\"line\">SSLEngine on</div><div class=\"line\">SSLCertificateFile /etc/letsencrypt/live/域名/cert.pem</div><div class=\"line\">SSLCertificateKeyFile /etc/letsencrypt/live/域名/privkey.pem</div><div class=\"line\">SSLCertificateChainFile /etc/letsencrypt/live/域名/fullchain.pem</div><div class=\"line\">&lt;/VirtualHost&gt;</div></pre></td></tr></table></figure></p>\n<p>HSTS（HTTP Strict Transport Security）的作用是强制客户端（如浏览器）使用HTTPS与服务器创建连接。</p>\n<h3 id=\"Tomcat设置\"><a href=\"#Tomcat设置\" class=\"headerlink\" title=\"Tomcat设置\"></a>Tomcat设置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">cp /etc/letsencrypt/live/域名/*.pem apache-tomcat-8.5.5/conf/</div><div class=\"line\"><span class=\"built_in\">cd</span> apache-tomcat-8.5.5/conf/</div><div class=\"line\">chown 用户:组 *.pem</div></pre></td></tr></table></figure>\n<p>修改conf/server.xml文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Connector port=<span class=\"string\">\"8443\"</span> protocol=<span class=\"string\">\"org.apache.coyote.http11.Http11NioProtocol\"</span></div><div class=\"line\">           maxThreads=<span class=\"string\">\"150\"</span> SSLEnabled=<span class=\"string\">\"true\"</span> &gt;</div><div class=\"line\">    &lt;UpgradeProtocol className=<span class=\"string\">\"org.apache.coyote.http2.Http2Protocol\"</span> /&gt;</div><div class=\"line\">    &lt;SSLHostConfig&gt;</div><div class=\"line\">        &lt;Certificate certificateKeyFile=<span class=\"string\">\"conf/privkey.pem\"</span></div><div class=\"line\">                     certificateFile=<span class=\"string\">\"conf/cert.pem\"</span></div><div class=\"line\">                     certificateChainFile=<span class=\"string\">\"conf/fullchain.pem\"</span></div><div class=\"line\">                     <span class=\"built_in\">type</span>=<span class=\"string\">\"RSA\"</span> /&gt;</div><div class=\"line\">    &lt;/SSLHostConfig&gt;</div><div class=\"line\">&lt;/Connector&gt;</div></pre></td></tr></table></figure>\n<h3 id=\"Nginx设置\"><a href=\"#Nginx设置\" class=\"headerlink\" title=\"Nginx设置\"></a>Nginx设置</h3><p>修改nginx的配置文件/usr/local/nginx/conf/nginx.conf，实现https转到内网tomcat的http服务，注：以下配置未实现tomcat识别来自https的请求，详细见问题3</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">     listen 8443;</div><div class=\"line\">     server_name localhost;</div><div class=\"line\">     ssl on;</div><div class=\"line\">     ssl_certificate /etc/letsencrypt/live/域名/fullchain.pem;</div><div class=\"line\">     ssl_certificate_key /etc/letsencrypt/live/域名/privkey.pem;</div><div class=\"line\">     server_name_in_redirect off;</div><div class=\"line\">     proxy_set_header Host $host:$server_port;</div><div class=\"line\">     proxy_connect_timeout 60s;</div><div class=\"line\">     proxy_read_timeout 5400s;</div><div class=\"line\">     proxy_send_timeout 5400s;</div><div class=\"line\">     proxy_set_header X-Real-IP $remote_addr;</div><div class=\"line\">     proxy_set_header REMOTE-HOST $remote_addr;</div><div class=\"line\">     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class=\"line\">     index index.html index.htm index.jsp index.do;</div><div class=\"line\">     location ^~ /ZhsqApp/&#123;</div><div class=\"line\">         proxy_pass  http://192.168.100.10:8080;</div><div class=\"line\">         client_max_body_size    100m;</div><div class=\"line\">     &#125;</div><div class=\"line\"> &#125;</div></pre></td></tr></table></figure>\n<h3 id=\"Weblogic-配置\"><a href=\"#Weblogic-配置\" class=\"headerlink\" title=\"Weblogic 配置\"></a>Weblogic 配置</h3><p>weblogic必须是10.3.6及以上版本，才能使用Let’s Encrypt的证书，Let’s Encrypt采用SHA256withRSA，低版本的不支持SHA256withRSA</p>\n<h3 id=\"生成密钥库\"><a href=\"#生成密钥库\" class=\"headerlink\" title=\"生成密钥库\"></a>生成密钥库</h3><p>执行openssl命令生成fullchain_and_key.p12，执行keytool命令生成密钥库文件weblogic.jks</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">openssl pkcs12 -export -in fullchain.pem -inkey privkey.pem -out fullchain_and_key.p12 -name weblogic -passout pass:123456</div><div class=\"line\">keytool -importkeystore -deststorepass 123456   -destkeystore weblogic.jks -srckeystore fullchain_and_key.p12 -srcstoretype PKCS12 -srcstorepass 123456  -alias weblogic</div></pre></td></tr></table></figure>\n<p>privkey.pem、fullchain.pem为Let’s Encrypt生成文件，密码可自行修改。注-name与-alias别名保存一致，-passout参数的pass:需保留。-passout与-srcstorepass密码保持一致， -deststorepass需记住在weblogic配置使用。</p>\n<h3 id=\"生成信任库\"><a href=\"#生成信任库\" class=\"headerlink\" title=\"生成信任库\"></a>生成信任库</h3><p>执行keytool命令生成信任库文件trust.jks<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">keytool -importcert -alias rootCA -trustcacerts -file cert.pem -keystore trust.jks -storepass 123456</div></pre></td></tr></table></figure></p>\n<p>cert.pem为Let’s Encrypt生成文件，密码可自行修改。 -storepass需记住在weblogic配置使用。</p>\n<h3 id=\"weblogic配置\"><a href=\"#weblogic配置\" class=\"headerlink\" title=\"weblogic配置\"></a>weblogic配置</h3><h4 id=\"启用SSL监听端口\"><a href=\"#启用SSL监听端口\" class=\"headerlink\" title=\"启用SSL监听端口\"></a>启用SSL监听端口</h4><p>登录weblogic控制台 -&gt; 服务器 -&gt; 选择服务器管理 -&gt; 配置标签 -&gt; 一般信息子标签页 -&gt; 启用 SSL 监听端口 -&gt; 修改端口7002 -&gt; 保存</p>\n<p>在Linux下设置端口小于1024的，需要使用管理员用户启动weblogic。</p>\n<p><img src=\"http://f3e6036a.fromwiz.com/share/resources/b0c2bbb1-1a90-4b45-a09a-c7aa9804cd7c/index_files/64659649.png\" alt=\"\"></p>\n<h4 id=\"密钥库配置\"><a href=\"#密钥库配置\" class=\"headerlink\" title=\"密钥库配置\"></a>密钥库配置</h4><p>进入配置标签 -&gt; 密钥库标签页</p>\n<p>1.密钥库点更改，选择定制标识和定制信任，点击保存。<br>2.定制标识密钥库，填写weblogic.jks全路径<br>定制标识密钥库类型，填写jks<br>3.定制标识密钥库密码短语，填写生成密钥库时 -deststorepass写的密码<br>4.确认定制标识密钥库密码短语，填写生成密钥库时 -deststorepass写的密码<br>5.定制信任密钥库，填写trust.jks全路径<br>6.定制信任密钥库类型，填写jks<br>7.定制信任密钥库密码短语，填写生成信任库时 -storepass写的密码<br>8.确认定制信任密钥库密码短语，填写生成信任库时 -storepass写的密码</p>\n<p><img src=\"http://f3e6036a.fromwiz.com/share/resources/b0c2bbb1-1a90-4b45-a09a-c7aa9804cd7c/index_files/65091944.png\" alt=\"\"></p>\n<h4 id=\"SSL配置\"><a href=\"#SSL配置\" class=\"headerlink\" title=\"SSL配置\"></a>SSL配置</h4><p>进入配置标签 -&gt; SSL标签页</p>\n<p>1.私有密钥别名，填写生成密钥库时的别名<br>2.私有密钥密码短语，填写生成密钥库时 -deststorepass写的密码<br>3.确认私有密钥密码短语，填写生成密钥库时 -deststorepass写的密码<br>点击保存</p>\n<p><img src=\"http://f3e6036a.fromwiz.com/share/resources/b0c2bbb1-1a90-4b45-a09a-c7aa9804cd7c/index_files/65673128.png\" alt=\"\"></p>\n<p>weblogic 10.3. 6 版本还需要做额外配置，SSL标签页中，点击高级，选中使用 JSSE SSL，点击保存</p>\n<p><img src=\"http://f3e6036a.fromwiz.com/share/resources/b0c2bbb1-1a90-4b45-a09a-c7aa9804cd7c/index_files/65716484.png\" alt=\"\"></p>\n<p>重启weblogic服务，测试https访问。</p>\n<h3 id=\"更新证书\"><a href=\"#更新证书\" class=\"headerlink\" title=\"更新证书\"></a>更新证书</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">./certbot-auto renew</div></pre></td></tr></table></figure>\n<p>更新证书之后，需要执行tomcat、weblogic对应配置内容。</p>\n<h3 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h3><h4 id=\"问题1、Let’s-Encrypt安装好之后在PC端可以正常访问，但在手机端提示不受信任的\"><a href=\"#问题1、Let’s-Encrypt安装好之后在PC端可以正常访问，但在手机端提示不受信任的\" class=\"headerlink\" title=\"问题1、Let’s Encrypt安装好之后在PC端可以正常访问，但在手机端提示不受信任的\"></a>问题1、Let’s Encrypt安装好之后在PC端可以正常访问，但在手机端提示不受信任的</h4><p>主要原因是缺少中级证书。生成的LE证书后使用的需要使用fullchain.pem，打开后会发现有两段证书，第一段是LE的证书，第二段才是你网站的证书。而你只有网站的证书，而没有LE的证书。</p>\n<h4 id=\"问题2、如何关闭SSL3协议\"><a href=\"#问题2、如何关闭SSL3协议\" class=\"headerlink\" title=\"问题2、如何关闭SSL3协议\"></a>问题2、如何关闭SSL3协议</h4><p>查看<a href=\"http://disablessl3.com如何关闭apache、nginx的ssl3协议\">http://disablessl3.com如何关闭apache、nginx的ssl3协议</a><br>tomcat修改，修改server.xml,</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Connector port=&quot;8443&quot; protocol=&quot;org.apache.coyote.http11.Http11NioProtocol&quot;</div><div class=\"line\">               maxThreads=&quot;150&quot; SSLEnabled=&quot;true&quot;</div><div class=\"line\">               sslProtocol=&quot;TLS&quot; sslEnabledProtocols=&quot;TLSv1,TLSv1.1,TLSv1.2&quot;  &gt;</div></pre></td></tr></table></figure>\n<h4 id=\"问题3、nginx采用Let’s-Encrypt证书，如何实现https转http，后端识别来自https的请求\"><a href=\"#问题3、nginx采用Let’s-Encrypt证书，如何实现https转http，后端识别来自https的请求\" class=\"headerlink\" title=\"问题3、nginx采用Let’s Encrypt证书，如何实现https转http，后端识别来自https的请求\"></a>问题3、nginx采用Let’s Encrypt证书，如何实现https转http，后端识别来自https的请求</h4><p>1.修改nginx的配置文件<br>修改nginx的配置文件/usr/local/nginx/conf/nginx.conf，实现https转到内网tomcat的http服务，注：以下配置未实现tomcat识别来自https的请求，详细见问题2</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">    listen 8443;</div><div class=\"line\">    server_name localhost;</div><div class=\"line\">    ssl on;</div><div class=\"line\">    ssl_certificate /etc/letsencrypt/live/域名/fullchain.pem;</div><div class=\"line\">    ssl_certificate_key /etc/letsencrypt/live/域名/privkey.pem;</div><div class=\"line\">    server_name_in_redirect off;</div><div class=\"line\">    proxy_set_header Host $host:$server_port;</div><div class=\"line\">    proxy_connect_timeout 60s;</div><div class=\"line\">    proxy_read_timeout 5400s;</div><div class=\"line\">    proxy_send_timeout 5400s;</div><div class=\"line\">    proxy_set_header X-Real-IP $remote_addr;</div><div class=\"line\">    proxy_set_header REMOTE-HOST $remote_addr;</div><div class=\"line\">    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</div><div class=\"line\">              proxy_set_header X-Forwarded-Proto  $scheme;</div><div class=\"line\">              proxy_set_header WL-Proxy-SSL true;</div><div class=\"line\">              add_header Strict-Transport-Security &quot;max-age=63072000; includeSubdomains;   &quot;;</div><div class=\"line\">    index index.html index.htm index.jsp index.do;</div><div class=\"line\">    location ^~ /ZhsqApp/&#123;</div><div class=\"line\">        proxy_pass  http://192.168.100.10:8080;</div><div class=\"line\">        client_max_body_size    100m;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div></pre></td></tr></table></figure>\n<p>主要增加3处配置：</p>\n<blockquote>\n<p>proxy_set_header X-Forwarded-Proto  $scheme; tomcat可识别参数<br>proxy_set_header WL-Proxy-SSL true; weblogic可识别参数<br>add_header Strict-Transport-Security “max-age=63072000; includeSubdomains; “; 启用HSTS功能，浏览器在63072000秒时间内默认以https请求服务</p>\n</blockquote>\n<p>2.tomcat启用识别X-Forwarded-Proto设置<br>修改配置文件server.xml，在Engine下添加下面内容</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;Valve className=&quot;org.apache.catalina.valves.RemoteIpValve&quot;   remoteIpHeader=&quot;X-Forwarded-For&quot;</div><div class=\"line\">           protocolHeader=&quot;X-Forwarded-Proto&quot;</div><div class=\"line\">           protocolHeaderHttpsValue=&quot;https&quot;/&gt;</div></pre></td></tr></table></figure>\n<p>做好上述配置，重启tomcat。request.getScheme()的值显示https<br>另外，可参考Nginx SSL+tomcat集群,request.getScheme() 取到https正确的协议内容</p>\n<p>3.weblogic启用识别WL-Proxy-SSL 设置<br>进入console界面，域名-&gt;配置-&gt;Web应用程序，勾选启用 WebLogic 插件，保存</p>\n<p><img src=\"http://f3e6036a.fromwiz.com/share/resources/b0c2bbb1-1a90-4b45-a09a-c7aa9804cd7c/index_files/65317389.png\" alt=\"\"><br><img src=\"http://f3e6036a.fromwiz.com/share/resources/b0c2bbb1-1a90-4b45-a09a-c7aa9804cd7c/index_files/65382741.png\" alt=\"\"></p>\n<p>做好上述配置，重启weblogic。request.getScheme()的值显示https<br>另外，可参考HTTPS/SSL/Spring Security doesn’t work in both a load balancer and non-load balancer environment #424内容</p>"},{"title":"travis部署Hexo之填坑日记","comments":1,"abbrlink":"a8653e18","date":"2017-02-17T08:34:46.000Z","_content":"\n这个小客栈总算是被我搭起来了，前前后后遇到了不少坑。果然每一次在网上学东西都是遇坑填坑的过程，不过这都是为了我们更好的成（zhuang）长(bi)嘛。\n\n\n也就不重复的讲其他教程里有的内容了，只简明的记录下，我的填坑过程。\n\n### 第一个坑 travis 找不指定文件\n<!--more--> \n``` bash\n$ cd 博客项目文件夹根目录\n$ touch .travis.yml\n```\n\n* 登录 travis\n``` bash\ntravis login --auto\n````\n\n``` bash\n# 这里的 REPO_TOKEN 是变量名,在后面的配置文件中会用到\n# TOKEN 是上面github生成的Token\ntravis encrypt 'REPO_TOKEN=<TOKEN>' --add\n```\n这在很多讲解Travis部署Hexo的教程中都有的步骤，那么问题就出现了。。。。\n\n* travis 找不到指定文件\n\n\n这里是在travis encrypt 你的github创建的token的时候出现的。\n\n解决办法： 在travis encrypt 'REPO_TOKEN=<TOKEN>' --add 的时候加上 -r 你的github用户民/你的repo名。比如我的就是\n\n``` bash\ntravis encrypt 'REPO_TOKEN=<TOKEN>' --add -r Nanmen/nanmen.github.io\n```\n\n### 第二个坑 travis 构建你的工程时报2> dev/null错的问题\n\n* 当我兴高采烈的去推送到我的dev分支的时候，travis 运行测试过程中报出个 '\\<token> 2>dev/null' 的错误，一脸懵有没有，明明都是按照教程来的，怎么会是这样的呢。在我前后回想之后，一不小心测试出来了。。。。\n\n解决办法： 在你执行travis encrypt 的时候，并不是跟大部分教程写的那样，应该执行这一句\n``` bash\ntravis encrypt REPO_TOKEN=TOKEN --add -r Nanmen/nanmen.github.io\n```\n\n### 参考资料\n1.[手把手教从零开始在GitHub上使用Hexo搭建博客教程(一)-附GitHub注册及配置 - 简书](http://www.jianshu.com/p/f4cc5866946b)\n  2.[手把手教从零开始在GitHub上使用Hexo搭建博客教程(四)-使用Travis自动部署Hex... - 简书](http://www.jianshu.com/p/fff7b3384f46)\n  3.[hexo教程系列——使用Travis自动部署hexo - 张学志の博客 - 博客频道 - CSDN.NET](http://blog.csdn.net/xuezhisdc/article/details/53130423)\n","source":"_posts/2017-02-17-travis部署Hexo之填坑日记.md","raw":"---\ntitle: travis部署Hexo之填坑日记\ncategories: Hexo\ntags:\n  - hexo\ncomments: true\nabbrlink: a8653e18\ndate: 2017-02-17 16:34:46\n---\n\n这个小客栈总算是被我搭起来了，前前后后遇到了不少坑。果然每一次在网上学东西都是遇坑填坑的过程，不过这都是为了我们更好的成（zhuang）长(bi)嘛。\n\n\n也就不重复的讲其他教程里有的内容了，只简明的记录下，我的填坑过程。\n\n### 第一个坑 travis 找不指定文件\n<!--more--> \n``` bash\n$ cd 博客项目文件夹根目录\n$ touch .travis.yml\n```\n\n* 登录 travis\n``` bash\ntravis login --auto\n````\n\n``` bash\n# 这里的 REPO_TOKEN 是变量名,在后面的配置文件中会用到\n# TOKEN 是上面github生成的Token\ntravis encrypt 'REPO_TOKEN=<TOKEN>' --add\n```\n这在很多讲解Travis部署Hexo的教程中都有的步骤，那么问题就出现了。。。。\n\n* travis 找不到指定文件\n\n\n这里是在travis encrypt 你的github创建的token的时候出现的。\n\n解决办法： 在travis encrypt 'REPO_TOKEN=<TOKEN>' --add 的时候加上 -r 你的github用户民/你的repo名。比如我的就是\n\n``` bash\ntravis encrypt 'REPO_TOKEN=<TOKEN>' --add -r Nanmen/nanmen.github.io\n```\n\n### 第二个坑 travis 构建你的工程时报2> dev/null错的问题\n\n* 当我兴高采烈的去推送到我的dev分支的时候，travis 运行测试过程中报出个 '\\<token> 2>dev/null' 的错误，一脸懵有没有，明明都是按照教程来的，怎么会是这样的呢。在我前后回想之后，一不小心测试出来了。。。。\n\n解决办法： 在你执行travis encrypt 的时候，并不是跟大部分教程写的那样，应该执行这一句\n``` bash\ntravis encrypt REPO_TOKEN=TOKEN --add -r Nanmen/nanmen.github.io\n```\n\n### 参考资料\n1.[手把手教从零开始在GitHub上使用Hexo搭建博客教程(一)-附GitHub注册及配置 - 简书](http://www.jianshu.com/p/f4cc5866946b)\n  2.[手把手教从零开始在GitHub上使用Hexo搭建博客教程(四)-使用Travis自动部署Hex... - 简书](http://www.jianshu.com/p/fff7b3384f46)\n  3.[hexo教程系列——使用Travis自动部署hexo - 张学志の博客 - 博客频道 - CSDN.NET](http://blog.csdn.net/xuezhisdc/article/details/53130423)\n","slug":"travis部署Hexo之填坑日记","published":1,"updated":"2017-02-19T06:58:40.928Z","layout":"post","photos":[],"link":"","_id":"cj9gq5qhv00041wu6et4bapzh","content":"<p>这个小客栈总算是被我搭起来了，前前后后遇到了不少坑。果然每一次在网上学东西都是遇坑填坑的过程，不过这都是为了我们更好的成（zhuang）长(bi)嘛。</p>\n<p>也就不重复的讲其他教程里有的内容了，只简明的记录下，我的填坑过程。</p>\n<h3 id=\"第一个坑-travis-找不指定文件\"><a href=\"#第一个坑-travis-找不指定文件\" class=\"headerlink\" title=\"第一个坑 travis 找不指定文件\"></a>第一个坑 travis 找不指定文件</h3><a id=\"more\"></a> \n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">cd</span> 博客项目文件夹根目录</div><div class=\"line\">$ touch .travis.yml</div></pre></td></tr></table></figure>\n<ul>\n<li>登录 travis<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">travis login --auto</div><div class=\"line\">`</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 这里的 REPO_TOKEN 是变量名,在后面的配置文件中会用到</span></div><div class=\"line\"><span class=\"comment\"># TOKEN 是上面github生成的Token</span></div><div class=\"line\">travis encrypt <span class=\"string\">'REPO_TOKEN=&lt;TOKEN&gt;'</span> --add</div></pre></td></tr></table></figure>\n<p>这在很多讲解Travis部署Hexo的教程中都有的步骤，那么问题就出现了。。。。</p>\n<ul>\n<li>travis 找不到指定文件</li>\n</ul>\n<p>这里是在travis encrypt 你的github创建的token的时候出现的。</p>\n<p>解决办法： 在travis encrypt ‘REPO_TOKEN=<token>‘ –add 的时候加上 -r 你的github用户民/你的repo名。比如我的就是</token></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">travis encrypt <span class=\"string\">'REPO_TOKEN=&lt;TOKEN&gt;'</span> --add -r Nanmen/nanmen.github.io</div></pre></td></tr></table></figure>\n<h3 id=\"第二个坑-travis-构建你的工程时报2-gt-dev-null错的问题\"><a href=\"#第二个坑-travis-构建你的工程时报2-gt-dev-null错的问题\" class=\"headerlink\" title=\"第二个坑 travis 构建你的工程时报2&gt; dev/null错的问题\"></a>第二个坑 travis 构建你的工程时报2&gt; dev/null错的问题</h3><ul>\n<li>当我兴高采烈的去推送到我的dev分支的时候，travis 运行测试过程中报出个 ‘\\<token> 2&gt;dev/null’ 的错误，一脸懵有没有，明明都是按照教程来的，怎么会是这样的呢。在我前后回想之后，一不小心测试出来了。。。。</token></li>\n</ul>\n<p>解决办法： 在你执行travis encrypt 的时候，并不是跟大部分教程写的那样，应该执行这一句<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">travis encrypt REPO_TOKEN=TOKEN --add -r Nanmen/nanmen.github.io</div></pre></td></tr></table></figure></p>\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><p>1.<a href=\"http://www.jianshu.com/p/f4cc5866946b\" target=\"_blank\" rel=\"external\">手把手教从零开始在GitHub上使用Hexo搭建博客教程(一)-附GitHub注册及配置 - 简书</a><br>  2.<a href=\"http://www.jianshu.com/p/fff7b3384f46\" target=\"_blank\" rel=\"external\">手把手教从零开始在GitHub上使用Hexo搭建博客教程(四)-使用Travis自动部署Hex… - 简书</a><br>  3.<a href=\"http://blog.csdn.net/xuezhisdc/article/details/53130423\" target=\"_blank\" rel=\"external\">hexo教程系列——使用Travis自动部署hexo - 张学志の博客 - 博客频道 - CSDN.NET</a></p>\n","excerpt":"<p>这个小客栈总算是被我搭起来了，前前后后遇到了不少坑。果然每一次在网上学东西都是遇坑填坑的过程，不过这都是为了我们更好的成（zhuang）长(bi)嘛。</p>\n<p>也就不重复的讲其他教程里有的内容了，只简明的记录下，我的填坑过程。</p>\n<h3 id=\"第一个坑-travis-找不指定文件\"><a href=\"#第一个坑-travis-找不指定文件\" class=\"headerlink\" title=\"第一个坑 travis 找不指定文件\"></a>第一个坑 travis 找不指定文件</h3>","more":"<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">cd</span> 博客项目文件夹根目录</div><div class=\"line\">$ touch .travis.yml</div></pre></td></tr></table></figure>\n<ul>\n<li>登录 travis<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">travis login --auto</div><div class=\"line\">`</div></pre></td></tr></table></figure>\n</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># 这里的 REPO_TOKEN 是变量名,在后面的配置文件中会用到</span></div><div class=\"line\"><span class=\"comment\"># TOKEN 是上面github生成的Token</span></div><div class=\"line\">travis encrypt <span class=\"string\">'REPO_TOKEN=&lt;TOKEN&gt;'</span> --add</div></pre></td></tr></table></figure>\n<p>这在很多讲解Travis部署Hexo的教程中都有的步骤，那么问题就出现了。。。。</p>\n<ul>\n<li>travis 找不到指定文件</li>\n</ul>\n<p>这里是在travis encrypt 你的github创建的token的时候出现的。</p>\n<p>解决办法： 在travis encrypt ‘REPO_TOKEN=<TOKEN>‘ –add 的时候加上 -r 你的github用户民/你的repo名。比如我的就是</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">travis encrypt <span class=\"string\">'REPO_TOKEN=&lt;TOKEN&gt;'</span> --add -r Nanmen/nanmen.github.io</div></pre></td></tr></table></figure>\n<h3 id=\"第二个坑-travis-构建你的工程时报2-gt-dev-null错的问题\"><a href=\"#第二个坑-travis-构建你的工程时报2-gt-dev-null错的问题\" class=\"headerlink\" title=\"第二个坑 travis 构建你的工程时报2&gt; dev/null错的问题\"></a>第二个坑 travis 构建你的工程时报2&gt; dev/null错的问题</h3><ul>\n<li>当我兴高采烈的去推送到我的dev分支的时候，travis 运行测试过程中报出个 ‘\\<token> 2&gt;dev/null’ 的错误，一脸懵有没有，明明都是按照教程来的，怎么会是这样的呢。在我前后回想之后，一不小心测试出来了。。。。</li>\n</ul>\n<p>解决办法： 在你执行travis encrypt 的时候，并不是跟大部分教程写的那样，应该执行这一句<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">travis encrypt REPO_TOKEN=TOKEN --add -r Nanmen/nanmen.github.io</div></pre></td></tr></table></figure></p>\n<h3 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h3><p>1.<a href=\"http://www.jianshu.com/p/f4cc5866946b\">手把手教从零开始在GitHub上使用Hexo搭建博客教程(一)-附GitHub注册及配置 - 简书</a><br>  2.<a href=\"http://www.jianshu.com/p/fff7b3384f46\">手把手教从零开始在GitHub上使用Hexo搭建博客教程(四)-使用Travis自动部署Hex… - 简书</a><br>  3.<a href=\"http://blog.csdn.net/xuezhisdc/article/details/53130423\">hexo教程系列——使用Travis自动部署hexo - 张学志の博客 - 博客频道 - CSDN.NET</a></p>"},{"title":"js学习之promise","comments":1,"abbrlink":"fddbb00f","date":"2017-02-21T11:01:28.000Z","_content":"\n## <center>js学习之promise<center>\n\n### Promise的初步认识\n\n我们之前在完成异步执行都是利用的回调函数去实现的，例如ajax的调用：\n```javascript\nvar request = new XMLHttpRequest(); // 新建XMLHttpRequest对象\n\nrequest.onreadystatechange = function () { // 状态发生变化时，函数被回调\n    if (request.readyState === 4) { // 成功完成\n        // 判断响应结果:\n        if (request.status === 200) {\n            // 成功，通过responseText拿到响应的文本:\n            return success(request.responseText);\n        } else {\n            // 失败，根据响应码判断失败原因:\n            return fail(request.status);\n        }\n    } else {\n        // HTTP请求还在继续...\n    }\n}\n\n// 发送请求:\nrequest.open('GET', '/api/categories');\nrequest.send();\n\nalert('请求已发送，请等待响应...');\n```\n<!--more--> \n当然我们可以封装起来，改成另外的写法：\n```javascript\nvar ajax = ajaxGet('http://...');\najax.ifSuccess(success)\n    .ifFail(fail);\n```\n\n但是我们从ES6后我们有了新的写法\n\n```javascript\nnew Promise(test).then(function (result) {\n    console.log('成功：' + result);\n}).catch(function (reason) {\n    console.log('失败：' + reason);\n});\n```\n\n当然这只是简单的promise的利用，进阶版本请看参考链接。\n\n### 参考链接\n\n>\n1.[Promise - 廖雪峰的官方网站](http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/0014345008539155e93fc16046d4bb7854943814c4f9dc2000)\n2.[[翻译] We have a problem with promises - FEX](http://fex.baidu.com/blog/2015/07/we-have-a-problem-with-promises/)\n3.[JavaScript Promise迷你书（中文版）](http://liubin.org/promises-book/)\n\n\n---\n### 前方的路很长，还需努力啊\n","source":"_posts/2017-02-21-js之promise.md","raw":"---\ntitle: js学习之promise\ncategories: js学习之路\ntags:\n  - js\n  - nodejs\ncomments: true\nabbrlink: fddbb00f\ndate: 2017-02-21 19:01:28\n---\n\n## <center>js学习之promise<center>\n\n### Promise的初步认识\n\n我们之前在完成异步执行都是利用的回调函数去实现的，例如ajax的调用：\n```javascript\nvar request = new XMLHttpRequest(); // 新建XMLHttpRequest对象\n\nrequest.onreadystatechange = function () { // 状态发生变化时，函数被回调\n    if (request.readyState === 4) { // 成功完成\n        // 判断响应结果:\n        if (request.status === 200) {\n            // 成功，通过responseText拿到响应的文本:\n            return success(request.responseText);\n        } else {\n            // 失败，根据响应码判断失败原因:\n            return fail(request.status);\n        }\n    } else {\n        // HTTP请求还在继续...\n    }\n}\n\n// 发送请求:\nrequest.open('GET', '/api/categories');\nrequest.send();\n\nalert('请求已发送，请等待响应...');\n```\n<!--more--> \n当然我们可以封装起来，改成另外的写法：\n```javascript\nvar ajax = ajaxGet('http://...');\najax.ifSuccess(success)\n    .ifFail(fail);\n```\n\n但是我们从ES6后我们有了新的写法\n\n```javascript\nnew Promise(test).then(function (result) {\n    console.log('成功：' + result);\n}).catch(function (reason) {\n    console.log('失败：' + reason);\n});\n```\n\n当然这只是简单的promise的利用，进阶版本请看参考链接。\n\n### 参考链接\n\n>\n1.[Promise - 廖雪峰的官方网站](http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/0014345008539155e93fc16046d4bb7854943814c4f9dc2000)\n2.[[翻译] We have a problem with promises - FEX](http://fex.baidu.com/blog/2015/07/we-have-a-problem-with-promises/)\n3.[JavaScript Promise迷你书（中文版）](http://liubin.org/promises-book/)\n\n\n---\n### 前方的路很长，还需努力啊\n","slug":"js之promise","published":1,"updated":"2017-02-22T02:02:09.421Z","layout":"post","photos":[],"link":"","_id":"cj9gq5qi300071wu6szurd3b4","content":"<h2 id=\"js学习之promise\"><a href=\"#js学习之promise\" class=\"headerlink\" title=\"js学习之promise\"></a><center>js学习之promise<center></center></center></h2><h3 id=\"Promise的初步认识\"><a href=\"#Promise的初步认识\" class=\"headerlink\" title=\"Promise的初步认识\"></a>Promise的初步认识</h3><p>我们之前在完成异步执行都是利用的回调函数去实现的，例如ajax的调用：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> request = <span class=\"keyword\">new</span> XMLHttpRequest(); <span class=\"comment\">// 新建XMLHttpRequest对象</span></div><div class=\"line\"></div><div class=\"line\">request.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">// 状态发生变化时，函数被回调</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (request.readyState === <span class=\"number\">4</span>) &#123; <span class=\"comment\">// 成功完成</span></div><div class=\"line\">        <span class=\"comment\">// 判断响应结果:</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (request.status === <span class=\"number\">200</span>) &#123;</div><div class=\"line\">            <span class=\"comment\">// 成功，通过responseText拿到响应的文本:</span></div><div class=\"line\">            <span class=\"keyword\">return</span> success(request.responseText);</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            <span class=\"comment\">// 失败，根据响应码判断失败原因:</span></div><div class=\"line\">            <span class=\"keyword\">return</span> fail(request.status);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        <span class=\"comment\">// HTTP请求还在继续...</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 发送请求:</span></div><div class=\"line\">request.open(<span class=\"string\">'GET'</span>, <span class=\"string\">'/api/categories'</span>);</div><div class=\"line\">request.send();</div><div class=\"line\"></div><div class=\"line\">alert(<span class=\"string\">'请求已发送，请等待响应...'</span>);</div></pre></td></tr></table></figure></p>\n<a id=\"more\"></a> \n<p>当然我们可以封装起来，改成另外的写法：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> ajax = ajaxGet(<span class=\"string\">'http://...'</span>);</div><div class=\"line\">ajax.ifSuccess(success)</div><div class=\"line\">    .ifFail(fail);</div></pre></td></tr></table></figure></p>\n<p>但是我们从ES6后我们有了新的写法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(test).then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">result</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'成功：'</span> + result);</div><div class=\"line\">&#125;).catch(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">reason</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'失败：'</span> + reason);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>当然这只是简单的promise的利用，进阶版本请看参考链接。</p>\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h3><p>&gt;<br>1.<a href=\"http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/0014345008539155e93fc16046d4bb7854943814c4f9dc2000\" target=\"_blank\" rel=\"external\">Promise - 廖雪峰的官方网站</a><br>2.<a href=\"http://fex.baidu.com/blog/2015/07/we-have-a-problem-with-promises/\" target=\"_blank\" rel=\"external\">[翻译] We have a problem with promises - FEX</a><br>3.<a href=\"http://liubin.org/promises-book/\" target=\"_blank\" rel=\"external\">JavaScript Promise迷你书（中文版）</a></p>\n<hr>\n<h3 id=\"前方的路很长，还需努力啊\"><a href=\"#前方的路很长，还需努力啊\" class=\"headerlink\" title=\"前方的路很长，还需努力啊\"></a>前方的路很长，还需努力啊</h3>","excerpt":"<h2 id=\"js学习之promise\"><a href=\"#js学习之promise\" class=\"headerlink\" title=\"js学习之promise\"></a><center>js学习之promise<center></h2><h3 id=\"Promise的初步认识\"><a href=\"#Promise的初步认识\" class=\"headerlink\" title=\"Promise的初步认识\"></a>Promise的初步认识</h3><p>我们之前在完成异步执行都是利用的回调函数去实现的，例如ajax的调用：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> request = <span class=\"keyword\">new</span> XMLHttpRequest(); <span class=\"comment\">// 新建XMLHttpRequest对象</span></div><div class=\"line\"></div><div class=\"line\">request.onreadystatechange = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123; <span class=\"comment\">// 状态发生变化时，函数被回调</span></div><div class=\"line\">    <span class=\"keyword\">if</span> (request.readyState === <span class=\"number\">4</span>) &#123; <span class=\"comment\">// 成功完成</span></div><div class=\"line\">        <span class=\"comment\">// 判断响应结果:</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (request.status === <span class=\"number\">200</span>) &#123;</div><div class=\"line\">            <span class=\"comment\">// 成功，通过responseText拿到响应的文本:</span></div><div class=\"line\">            <span class=\"keyword\">return</span> success(request.responseText);</div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            <span class=\"comment\">// 失败，根据响应码判断失败原因:</span></div><div class=\"line\">            <span class=\"keyword\">return</span> fail(request.status);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">        <span class=\"comment\">// HTTP请求还在继续...</span></div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 发送请求:</span></div><div class=\"line\">request.open(<span class=\"string\">'GET'</span>, <span class=\"string\">'/api/categories'</span>);</div><div class=\"line\">request.send();</div><div class=\"line\"></div><div class=\"line\">alert(<span class=\"string\">'请求已发送，请等待响应...'</span>);</div></pre></td></tr></table></figure></p>","more":"<p>当然我们可以封装起来，改成另外的写法：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> ajax = ajaxGet(<span class=\"string\">'http://...'</span>);</div><div class=\"line\">ajax.ifSuccess(success)</div><div class=\"line\">    .ifFail(fail);</div></pre></td></tr></table></figure></p>\n<p>但是我们从ES6后我们有了新的写法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(test).then(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">result</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'成功：'</span> + result);</div><div class=\"line\">&#125;).catch(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">reason</span>) </span>&#123;</div><div class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">'失败：'</span> + reason);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>当然这只是简单的promise的利用，进阶版本请看参考链接。</p>\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h3><p>&gt;<br>1.<a href=\"http://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000/0014345008539155e93fc16046d4bb7854943814c4f9dc2000\">Promise - 廖雪峰的官方网站</a><br>2.<a href=\"http://fex.baidu.com/blog/2015/07/we-have-a-problem-with-promises/\">[翻译] We have a problem with promises - FEX</a><br>3.<a href=\"http://liubin.org/promises-book/\">JavaScript Promise迷你书（中文版）</a></p>\n<hr>\n<h3 id=\"前方的路很长，还需努力啊\"><a href=\"#前方的路很长，还需努力啊\" class=\"headerlink\" title=\"前方的路很长，还需努力啊\"></a>前方的路很长，还需努力啊</h3>"},{"title":"新的开始","type":"categories","comments":0,"abbrlink":"b585e161","date":"2017-11-01T04:48:10.000Z","_content":"","source":"_posts/2017-11-01-新的开始.md","raw":"---\ntitle: 新的开始\ntype: categories\ncomments: false\nabbrlink: b585e161\ndate: 2017-11-01 12:48:10\n---\n","slug":"新的开始","published":1,"updated":"2017-11-01T05:47:22.868Z","layout":"post","photos":[],"link":"","_id":"cj9gq5qi400091wu6nnf9hsnr","content":"","excerpt":"","more":""},{"title":"异常随记","type":"categories","comments":0,"abbrlink":"3979fffb","date":"2017-06-16T03:01:24.000Z","_content":"","source":"_posts/2017-06-16-异常随记.md","raw":"---\ntitle: 异常随记\ntype: categories\ncomments: false\nabbrlink: 3979fffb\ndate: 2017-06-16 11:01:24\n---\n","slug":"异常随记","published":1,"updated":"2017-11-01T05:47:22.870Z","layout":"post","photos":[],"link":"","_id":"cj9gq5qi6000a1wu6zcds70fg","content":"","excerpt":"","more":""},{"title":"spring ioc 控制反转","comments":1,"abbrlink":"50de3585","date":"2017-03-04T13:15:00.000Z","_content":"\n## <center>Spring -- IOC<center>\n\n### spring ioc 控制反转\n\n    IOC（Inversion of Control）控制反转：本来是由应用程序管理的对象之间的依赖关系，现在交给了容器管理，这就叫控制反转，即交给了IOC容器，Spring的IOC容器主要使用DI方式实现的。不需要主动查找，对象的查找、定位和创建全部由容器管理。\n\n    通俗点说就是不创建对象。以前我们要调用一个对象的方法，首先要new一个对象。但使用IOC容器，在代码中不直接与对象连接，而是在配置文件中描述要使用哪一个对象。容器负责将这些联系在一起。\n\n### 实现方法\n\n      IOC容器的对象实例化是通过配置文件来实现的。术语上这叫做注入。注入有两种形式，采用构造方法注入和采用setter注入。具体的注入形式如下\n<!--more--> \n采用set方法注入，给属性添加一个set方法，并对其进行赋值\n```java\npublicclass UserManagerImplimplements UserManager {\n\n    private UserDaouserDao;\n\n    publicvoid setUserDao(UserDao userDao) {\n\n        this.userDao = userDao;\n\n    }\n\n}\n```\n#### 配置文件：\n```java\n<beanid=\"userManager\"class=\"com.bjpowernode.spring.manager.UserManagerImpl\">\n\n     <propertyname=\"userDao\"ref=\"usrDao4Oracle\"/>\n\n  </bean>\n```\nset注入特点：\n\n        与传统的JavaBean的写法更相似，程序员更容易理解、接受，通过setter方式设定依赖关系显得更加直观、明显；\n\n        对于复杂的依赖关系，如果采用构造注入，会导致构造器过于臃肿，难以阅读。Spring在创建Bean实例时，需要同时实例化其依赖的全部实例，因而导致死你功能下降。而使用设置注入，则避免这下问题；\n\n       尤其在某些属性可选的情况下，多参数的构造器更加笨拙。\n\n采用构造方法注入，在构造方法中对属性进行赋值\n```java\npublicclass UserManagerImplimplements UserManager {\n\n    private UserDaouserDao;\n\n    public UserManagerImpl(UserDao userDao) {\n        this.userDao = userDao;\n    }\n}\n```\n配置文件：\n```java\n<beanid=\"userManager\"class=\"com.bjpowernode.spring.manager.UserManagerImpl\">\n\n    <constructor-argref=\"userDao4Mysql\"/>\n\n</bean>\n```\n构造方法注入特点：\n\n       构造注入可以在构造器中决定依赖关系的注入顺序，优先依赖的优先注入。\n\n       对于依赖关系无须变化的Bean，构造注入更有用处；因为没有setter方法，所有的依赖关系全部在构造器内设定，因此，不用担心后续代码对依赖关系的破坏。\n      依赖关系只能在构造器中设定，则只有组件的创建者才能改变组件的依赖关系。对组件的调用者而言，组件内部的依赖关系完全透明，更符合高内聚的原则；\n","source":"_posts/spring ioc 控制反转.md","raw":"---\ntitle: spring ioc 控制反转\ncategories: java学习之路\ntags:\n  - java\n  - IOC（Inversion of Control）控制反转\ncomments: true\nabbrlink: 50de3585\ndate: 2017-03-04 21:15:00\n---\n\n## <center>Spring -- IOC<center>\n\n### spring ioc 控制反转\n\n    IOC（Inversion of Control）控制反转：本来是由应用程序管理的对象之间的依赖关系，现在交给了容器管理，这就叫控制反转，即交给了IOC容器，Spring的IOC容器主要使用DI方式实现的。不需要主动查找，对象的查找、定位和创建全部由容器管理。\n\n    通俗点说就是不创建对象。以前我们要调用一个对象的方法，首先要new一个对象。但使用IOC容器，在代码中不直接与对象连接，而是在配置文件中描述要使用哪一个对象。容器负责将这些联系在一起。\n\n### 实现方法\n\n      IOC容器的对象实例化是通过配置文件来实现的。术语上这叫做注入。注入有两种形式，采用构造方法注入和采用setter注入。具体的注入形式如下\n<!--more--> \n采用set方法注入，给属性添加一个set方法，并对其进行赋值\n```java\npublicclass UserManagerImplimplements UserManager {\n\n    private UserDaouserDao;\n\n    publicvoid setUserDao(UserDao userDao) {\n\n        this.userDao = userDao;\n\n    }\n\n}\n```\n#### 配置文件：\n```java\n<beanid=\"userManager\"class=\"com.bjpowernode.spring.manager.UserManagerImpl\">\n\n     <propertyname=\"userDao\"ref=\"usrDao4Oracle\"/>\n\n  </bean>\n```\nset注入特点：\n\n        与传统的JavaBean的写法更相似，程序员更容易理解、接受，通过setter方式设定依赖关系显得更加直观、明显；\n\n        对于复杂的依赖关系，如果采用构造注入，会导致构造器过于臃肿，难以阅读。Spring在创建Bean实例时，需要同时实例化其依赖的全部实例，因而导致死你功能下降。而使用设置注入，则避免这下问题；\n\n       尤其在某些属性可选的情况下，多参数的构造器更加笨拙。\n\n采用构造方法注入，在构造方法中对属性进行赋值\n```java\npublicclass UserManagerImplimplements UserManager {\n\n    private UserDaouserDao;\n\n    public UserManagerImpl(UserDao userDao) {\n        this.userDao = userDao;\n    }\n}\n```\n配置文件：\n```java\n<beanid=\"userManager\"class=\"com.bjpowernode.spring.manager.UserManagerImpl\">\n\n    <constructor-argref=\"userDao4Mysql\"/>\n\n</bean>\n```\n构造方法注入特点：\n\n       构造注入可以在构造器中决定依赖关系的注入顺序，优先依赖的优先注入。\n\n       对于依赖关系无须变化的Bean，构造注入更有用处；因为没有setter方法，所有的依赖关系全部在构造器内设定，因此，不用担心后续代码对依赖关系的破坏。\n      依赖关系只能在构造器中设定，则只有组件的创建者才能改变组件的依赖关系。对组件的调用者而言，组件内部的依赖关系完全透明，更符合高内聚的原则；\n","slug":"spring-ioc-控制反转","published":1,"updated":"2017-03-12T08:22:45.877Z","layout":"post","photos":[],"link":"","_id":"cj9gq5qi7000c1wu6capqikqe","content":"<h2 id=\"Spring-–-IOC\"><a href=\"#Spring-–-IOC\" class=\"headerlink\" title=\"Spring – IOC\"></a><center>Spring – IOC<center></center></center></h2><h3 id=\"spring-ioc-控制反转\"><a href=\"#spring-ioc-控制反转\" class=\"headerlink\" title=\"spring ioc 控制反转\"></a>spring ioc 控制反转</h3><pre><code>IOC（Inversion of Control）控制反转：本来是由应用程序管理的对象之间的依赖关系，现在交给了容器管理，这就叫控制反转，即交给了IOC容器，Spring的IOC容器主要使用DI方式实现的。不需要主动查找，对象的查找、定位和创建全部由容器管理。\n\n通俗点说就是不创建对象。以前我们要调用一个对象的方法，首先要new一个对象。但使用IOC容器，在代码中不直接与对象连接，而是在配置文件中描述要使用哪一个对象。容器负责将这些联系在一起。\n</code></pre><h3 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h3><pre><code>IOC容器的对象实例化是通过配置文件来实现的。术语上这叫做注入。注入有两种形式，采用构造方法注入和采用setter注入。具体的注入形式如下\n</code></pre><a id=\"more\"></a> \n<p>采用set方法注入，给属性添加一个set方法，并对其进行赋值<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">publicclass UserManagerImplimplements UserManager &#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> UserDaouserDao;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\">publicvoid <span class=\"title\">setUserDao</span><span class=\"params\">(UserDao userDao)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">this</span>.userDao = userDao;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"配置文件：\"><a href=\"#配置文件：\" class=\"headerlink\" title=\"配置文件：\"></a>配置文件：</h4><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;beanid=\"userManager\"class=\"com.bjpowernode.spring.manager.UserManagerImpl\"&gt;</div><div class=\"line\"></div><div class=\"line\">     &lt;propertyname=\"userDao\"ref=\"usrDao4Oracle\"/&gt;</div><div class=\"line\"></div><div class=\"line\">  &lt;/bean&gt;</div></pre></td></tr></table></figure>\n<p>set注入特点：</p>\n<pre><code> 与传统的JavaBean的写法更相似，程序员更容易理解、接受，通过setter方式设定依赖关系显得更加直观、明显；\n\n 对于复杂的依赖关系，如果采用构造注入，会导致构造器过于臃肿，难以阅读。Spring在创建Bean实例时，需要同时实例化其依赖的全部实例，因而导致死你功能下降。而使用设置注入，则避免这下问题；\n\n尤其在某些属性可选的情况下，多参数的构造器更加笨拙。\n</code></pre><p>采用构造方法注入，在构造方法中对属性进行赋值<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">publicclass UserManagerImplimplements UserManager &#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> UserDaouserDao;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">UserManagerImpl</span><span class=\"params\">(UserDao userDao)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.userDao = userDao;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>配置文件：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;beanid=\"userManager\"class=\"com.bjpowernode.spring.manager.UserManagerImpl\"&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;constructor-argref=\"userDao4Mysql\"/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/bean&gt;</div></pre></td></tr></table></figure></p>\n<p>构造方法注入特点：</p>\n<pre><code> 构造注入可以在构造器中决定依赖关系的注入顺序，优先依赖的优先注入。\n\n 对于依赖关系无须变化的Bean，构造注入更有用处；因为没有setter方法，所有的依赖关系全部在构造器内设定，因此，不用担心后续代码对依赖关系的破坏。\n依赖关系只能在构造器中设定，则只有组件的创建者才能改变组件的依赖关系。对组件的调用者而言，组件内部的依赖关系完全透明，更符合高内聚的原则；\n</code></pre>","excerpt":"<h2 id=\"Spring-–-IOC\"><a href=\"#Spring-–-IOC\" class=\"headerlink\" title=\"Spring – IOC\"></a><center>Spring – IOC<center></h2><h3 id=\"spring-ioc-控制反转\"><a href=\"#spring-ioc-控制反转\" class=\"headerlink\" title=\"spring ioc 控制反转\"></a>spring ioc 控制反转</h3><pre><code>IOC（Inversion of Control）控制反转：本来是由应用程序管理的对象之间的依赖关系，现在交给了容器管理，这就叫控制反转，即交给了IOC容器，Spring的IOC容器主要使用DI方式实现的。不需要主动查找，对象的查找、定位和创建全部由容器管理。\n\n通俗点说就是不创建对象。以前我们要调用一个对象的方法，首先要new一个对象。但使用IOC容器，在代码中不直接与对象连接，而是在配置文件中描述要使用哪一个对象。容器负责将这些联系在一起。\n</code></pre><h3 id=\"实现方法\"><a href=\"#实现方法\" class=\"headerlink\" title=\"实现方法\"></a>实现方法</h3><pre><code>IOC容器的对象实例化是通过配置文件来实现的。术语上这叫做注入。注入有两种形式，采用构造方法注入和采用setter注入。具体的注入形式如下\n</code></pre>","more":"<p>采用set方法注入，给属性添加一个set方法，并对其进行赋值<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">publicclass UserManagerImplimplements UserManager &#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> UserDaouserDao;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\">publicvoid <span class=\"title\">setUserDao</span><span class=\"params\">(UserDao userDao)</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">this</span>.userDao = userDao;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h4 id=\"配置文件：\"><a href=\"#配置文件：\" class=\"headerlink\" title=\"配置文件：\"></a>配置文件：</h4><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;beanid=\"userManager\"class=\"com.bjpowernode.spring.manager.UserManagerImpl\"&gt;</div><div class=\"line\"></div><div class=\"line\">     &lt;propertyname=\"userDao\"ref=\"usrDao4Oracle\"/&gt;</div><div class=\"line\"></div><div class=\"line\">  &lt;/bean&gt;</div></pre></td></tr></table></figure>\n<p>set注入特点：</p>\n<pre><code> 与传统的JavaBean的写法更相似，程序员更容易理解、接受，通过setter方式设定依赖关系显得更加直观、明显；\n\n 对于复杂的依赖关系，如果采用构造注入，会导致构造器过于臃肿，难以阅读。Spring在创建Bean实例时，需要同时实例化其依赖的全部实例，因而导致死你功能下降。而使用设置注入，则避免这下问题；\n\n尤其在某些属性可选的情况下，多参数的构造器更加笨拙。\n</code></pre><p>采用构造方法注入，在构造方法中对属性进行赋值<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">publicclass UserManagerImplimplements UserManager &#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">private</span> UserDaouserDao;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">UserManagerImpl</span><span class=\"params\">(UserDao userDao)</span> </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.userDao = userDao;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>配置文件：<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;beanid=\"userManager\"class=\"com.bjpowernode.spring.manager.UserManagerImpl\"&gt;</div><div class=\"line\"></div><div class=\"line\">    &lt;constructor-argref=\"userDao4Mysql\"/&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/bean&gt;</div></pre></td></tr></table></figure></p>\n<p>构造方法注入特点：</p>\n<pre><code> 构造注入可以在构造器中决定依赖关系的注入顺序，优先依赖的优先注入。\n\n 对于依赖关系无须变化的Bean，构造注入更有用处；因为没有setter方法，所有的依赖关系全部在构造器内设定，因此，不用担心后续代码对依赖关系的破坏。\n依赖关系只能在构造器中设定，则只有组件的创建者才能改变组件的依赖关系。对组件的调用者而言，组件内部的依赖关系完全透明，更符合高内聚的原则；\n</code></pre>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj9gq5qhr00021wu6ytnkzm61","category_id":"cj9gq5qi100061wu6mhrkfrxd","_id":"cj9gq5qi9000f1wu6htj4j743"},{"post_id":"cj9gq5qhv00041wu6et4bapzh","category_id":"cj9gq5qi6000b1wu60y1l9ifb","_id":"cj9gq5qif000i1wu655yhmzp4"},{"post_id":"cj9gq5qi300071wu6szurd3b4","category_id":"cj9gq5qia000g1wu6poe8ua78","_id":"cj9gq5qih000m1wu6336p42dz"},{"post_id":"cj9gq5qi7000c1wu6capqikqe","category_id":"cj9gq5qig000j1wu6sztiby9w","_id":"cj9gq5qij000p1wu6o786xgk2"}],"PostTag":[{"post_id":"cj9gq5qhv00041wu6et4bapzh","tag_id":"cj9gq5qi400081wu6piewbo1f","_id":"cj9gq5qi8000e1wu68s944chw"},{"post_id":"cj9gq5qi300071wu6szurd3b4","tag_id":"cj9gq5qi8000d1wu6hr9nqe6r","_id":"cj9gq5qih000l1wu641sigirv"},{"post_id":"cj9gq5qi300071wu6szurd3b4","tag_id":"cj9gq5qic000h1wu61e4z8l5e","_id":"cj9gq5qii000n1wu686nvdc1c"},{"post_id":"cj9gq5qi7000c1wu6capqikqe","tag_id":"cj9gq5qig000k1wu6gxr91ycd","_id":"cj9gq5qik000q1wu6evly3wyc"},{"post_id":"cj9gq5qi7000c1wu6capqikqe","tag_id":"cj9gq5qii000o1wu6tsqfro5b","_id":"cj9gq5qil000r1wu6dftdcvpc"}],"Tag":[{"name":"hexo","_id":"cj9gq5qi400081wu6piewbo1f"},{"name":"js","_id":"cj9gq5qi8000d1wu6hr9nqe6r"},{"name":"nodejs","_id":"cj9gq5qic000h1wu61e4z8l5e"},{"name":"java","_id":"cj9gq5qig000k1wu6gxr91ycd"},{"name":"IOC（Inversion of Control）控制反转","_id":"cj9gq5qii000o1wu6tsqfro5b"}]}}